(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{361:function(n,s,a){"use strict";a.r(s);var e=a(10),t=Object(e.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"对深拷贝的研究"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对深拷贝的研究"}},[n._v("#")]),n._v(" 对深拷贝的研究")]),n._v(" "),s("h2",{attrs:{id:"深拷贝和浅拷贝的定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深拷贝和浅拷贝的定义"}},[n._v("#")]),n._v(" 深拷贝和浅拷贝的定义")]),n._v(" "),s("p",[n._v("深拷贝：拷贝实例；浅拷贝：拷贝引用（原对象）。")]),n._v(" "),s("h4",{attrs:{id:"说深拷贝和浅拷贝之前-我先去了解了下高程书上的-javascript-的变量类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说深拷贝和浅拷贝之前-我先去了解了下高程书上的-javascript-的变量类型"}},[n._v("#")]),n._v(" 说深拷贝和浅拷贝之前，我先去了解了下高程书上的 JavaScript 的变量类型")]),n._v(" "),s("p",[n._v("基本类型：undefined、null、Boolean、number、string。变量直接按指存放在栈区内，可以直接访问，所以我们平时把字符串、数字的值赋值给新变量，相当于把值完全复制过去，新变量的改变不会影响旧变量。")]),n._v(" "),s("p",[n._v("引用类型：存放在堆区的对象，变量在栈区中保存的是一个指针地址。")]),n._v(" "),s("p",[n._v("例子")]),n._v(" "),s("div",{staticClass:"language-plain line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[n._v("   let a = 123;\n   let b = a;\n   b = 456;\n   console.log(a);//123\n   console.log(b);//456\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br")])]),s("p",[n._v("深拷贝和浅拷贝图解")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://wendaoshuai66.github.io/study/note/images/%E6%8B%B7%E8%B4%9D%E5%9B%BE%E8%A7%A3.png",alt:""}})]),n._v(" "),s("p",[n._v("将一个对象从内存中完整的拷贝一份出来,从堆内存中开辟一个新的区域存放新对象,且修改新对象不会影响原对象")]),n._v(" "),s("p",[n._v("话不多说，浅拷贝就不再多说，下面我们直入正题：")]),n._v(" "),s("h2",{attrs:{id:"乞丐版"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#乞丐版"}},[n._v("#")]),n._v(" 乞丐版")]),n._v(" "),s("p",[n._v("在不使用第三方库的情况下，我们想要深拷贝一个对象，用的最多的就是下面这个方法。")]),n._v(" "),s("div",{staticClass:"language-plain line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[n._v("JSON.parse(JSON.stringify());\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br")])]),s("p",[n._v("这种写法非常简单，而且可以应对大部分的应用场景，但是它还是有很大缺陷的，比如拷贝其他引用类型、拷贝函数、拷贝正则、拷贝 Date 类型、循环引用等情况不行。")]),n._v(" "),s("h2",{attrs:{id:"基础版本-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础版本-1"}},[n._v("#")]),n._v(" 基础版本 1")]),n._v(" "),s("div",{staticClass:"language-plain line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[n._v("//基础版本\n\nfunction clone(target) {\n    let cloneTarget = {};\n    for (let i in target) {\n        cloneTarget[i] = target[i]\n    }\n    return cloneTarget;\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br")])]),s("h2",{attrs:{id:"基础版本-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础版本-2"}},[n._v("#")]),n._v(" 基础版本 2")]),n._v(" "),s("p",[n._v("创建一个新的对象，遍历需要克隆的对象，将需要克隆对象的属性依次添加到新对象上，返回。")]),n._v(" "),s("p",[n._v("如果是深拷贝的话，考虑到我们要拷贝的对象是不知道有多少层深度的，我们可以用递归来解决问题，稍微改写上面的代码：")]),n._v(" "),s("p",[n._v("如果是原始类型，无需继续拷贝，直接返回")]),n._v(" "),s("p",[n._v("如果是引用类型，创建一个新的对象，遍历需要克隆的对象，将需要克隆对象的属性执行深拷贝后依次添加到新对象上。")]),n._v(" "),s("p",[n._v("很容易理解，如果有更深层次的对象可以继续递归直到属性为原始类型，这样我们就完成了一个最简单的深拷贝")]),n._v(" "),s("div",{staticClass:"language-plain line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[n._v("\nfunction clone(target) {\n    if (typeof target === \"object\") {\n        let cloneTarget = {};\n        for (let i in target) {\n            cloneTarget[i] = clone(target[i])\n        }\n        return cloneTarget;\n    } else {\n        return target;\n    }\n}\nlet obj = {\n    a: 1,\n    b: {\n        c: {\n            d: function() {\n                console.log(1)\n            }\n        }\n    }\n}\nlet obj1 = clone(obj)\nobj1['b']['c']['d'] = 'ee'\nconsole.log(obj1)\nconsole.log(obj)\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br")])]),s("h2",{attrs:{id:"基础版本-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础版本-3"}},[n._v("#")]),n._v(" 基础版本 3")]),n._v(" "),s("p",[n._v("在上面的版本中，我们的初始化结果只考虑了普通的 object，下面我们只需要把初始化代码稍微一变，就可以兼容数组了：")]),n._v(" "),s("div",{staticClass:"language-plain line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[n._v("function clone(target) {\n            if (typeof target === \"object\") {\n                let cloneTarget = Array.isArray(target) ? [] : {}\n                for (let i in target) {\n                    cloneTarget[i] = clone(target[i])\n                }\n                return cloneTarget;\n            } else {\n                return target\n            }\n        }\n    let obj = {\n        a: 1,\n        b: {\n            c: [1]\n        }\n    }\n    let obj1 = clone(obj);\n    obj1['b']['c'].push(2)\n    console.log(obj)\n    console.log(obj1)\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br")])]),s("h2",{attrs:{id:"基础版本-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础版本-4"}},[n._v("#")]),n._v(" 基础版本 4")]),n._v(" "),s("p",[n._v("循环引用,一般我们很少会遇到这种情况，首先我们执行一个测试用例")]),n._v(" "),s("div",{staticClass:"language-plain line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[n._v("function clone(target) {\n    if (typeof target === \"object\") {\n        let cloneTarget = Array.isArray(target) ? [] : {};\n        for (let i in target) {\n            cloneTarget[i] = clone(target[i])\n        }\n        return cloneTarget\n    } else {\n        return target;\n    }\n}\n\nlet obj = {\n    a: 1,\n    b: {\n        c: [1]\n    }\n}\nobj.obj = obj;\nlet obj1 = clone(obj);\nobj1['b']['c'].push(2)\nconsole.log(obj)\nconsole.log(obj1)\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br")])]),s("p",[n._v("可以看到下面的结果：")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://wendaoshuai66.github.io/study/note/images/%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8.png",alt:""}})]),n._v(" "),s("p",[n._v("很明显，因为递归进入死循环导致栈内存溢出了。")]),n._v(" "),s("p",[n._v("原因就是上面的对象存在循环引用的情况，即对象的属性间接或直接的引用了自身的情况：")]),n._v(" "),s("p",[n._v("循环引用是一个不常见的现象，但是像 react 的 dome 节点的话很可能会出现循环引用，例如一个 span 节点中会出现一个 span 节点，这个很可能会相互引用。")]),n._v(" "),s("p",[n._v("那么怎么解决呢？来看看这段代码")]),n._v(" "),s("p",[n._v("解决循环引用问题，我们可以额外开辟一个存储空间，来存储当前对象和拷贝对象的对应关系，当需要拷贝当前对象时，先去存储空间中找，有没有拷贝过这个对象，如果有的话直接返回，如果没有的话继续拷贝，这样就巧妙化解的循环引用的问题。")]),n._v(" "),s("p",[n._v("1.检查 map 中有无克隆过的对象")]),n._v(" "),s("p",[n._v("2.有 - 直接返回")]),n._v(" "),s("p",[n._v("3.没有 - 将当前对象作为 key，克隆对象作为 value 进行存储")]),n._v(" "),s("p",[n._v("4.继续克隆")]),n._v(" "),s("div",{staticClass:"language-plain line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[n._v("function clone(target, map = new Map()) {\n    if (typeof target === \"object\") {\n        let cloneTarget = Array.isArray(target) ? [] : {};\n        if (map.get(target)) {\n            return map.get(target)\n        }\n        map.set(target, cloneTarget)\n        for (let i in target) {\n            cloneTarget[i] = clone(target[i], map)\n        }\n        return cloneTarget\n    } else {\n        return target;\n    }\n}\n\nlet obj = {\n    a: 1,\n    b: {\n        c: [1]\n    }\n}\nobj.obj = obj;\nlet obj1 = clone(obj);\nobj1['b']['c'].push(2)\nconsole.log(obj)\nconsole.log(obj1)\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br")])]),s("p",[n._v("再来执行上面的测试用例：")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://wendaoshuai66.github.io/study/note/images/%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A81.png",alt:""}})]),n._v(" "),s("p",[n._v("可以看到，执行没有报错，且 target 属性，变为了一个 Circular 类型，即循环应用的意思。")]),n._v(" "),s("p",[n._v("循环引用有时候会遇到这种情况，所以我们应该考虑到这种情况。")]),n._v(" "),s("p",[n._v("接下来，我们可以使用， WeakMap 提代 Map 来使代码达到画龙点睛的作用")]),n._v(" "),s("div",{staticClass:"language-plain line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[n._v("\nfunction clone(target, map = new WeakMap()) {\n    if (typeof target === \"object\") {\n         let cloneTarget = Array.isArray(target) ? [] : {};\n        if (map.get(target)) {\n            return map.get(target)\n        }\n        map.set(target, cloneTarget);\n        for (let i in target) {\n            cloneTarget[i] = clone(target[i], map)\n        }\n        return cloneTarget;\n    } else {\n        return target;\n    }\n}\n\nlet obj = {\n    a: 1,\n    b: {\n        c: []\n    }\n}\nobj.obj = obj;\nlet obj1 = clone(obj);\n\nobj1['b']['c'] = function() {\n    console.log(1)\n}\n\nconsole.log(obj)\n\nconsole.log(obj1)\n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br")])]),s("h4",{attrs:{id:"为什么要这样做呢-先来看看-weakmap-的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要这样做呢-先来看看-weakmap-的作用"}},[n._v("#")]),n._v(" 为什么要这样做呢？，先来看看 WeakMap 的作用")]),n._v(" "),s("h4",{attrs:{id:"weakmap-对象是一组键-值对的集合-其中的键是弱引用的。其键必须是对象-而值可以是任意的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#weakmap-对象是一组键-值对的集合-其中的键是弱引用的。其键必须是对象-而值可以是任意的"}},[n._v("#")]),n._v(" WeakMap 对象是一组键/值对的集合，其中的键是弱引用的。其键必须是对象，而值可以是任意的")]),n._v(" "),s("p",[n._v("WeakMap 是 map 的变体，二者的多数外部行为特性都是一样的，区别在于内部内存分配\n(特别是其 GC)的工作方式。")]),n._v(" "),s("p",[n._v("WeakMap 没有 size 属性或 clear() 方法，也不会暴露任何键、值或项目上的迭代器。所以即使你解除了对 x 的引用，它将会因 GC 时这个条目被从 m 中移除，也没有办法确定这 一事实。所以你就相信 JavaScript 所声明的吧!\n和 Map 一样，通过 WeakMap 可以把信息与一个对象软关联起来。而在对这个对象没有完 全控制权的时候，这个功能特别有用，比如 DOM 元素。如果作为映射键的对象可以被删除，并支持垃圾回收，那么 WeakMap 就更是合适的选择了。")]),n._v(" "),s("p",[n._v("来看下面的一个实例")]),n._v(" "),s("div",{staticClass:"language-plain line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[n._v("var m = new WeakMap();\nvar x = {\n        id: 1\n    },\n    y = {\n        id: 2\n    },\n    z = {\n        id: 3\n    },\n    w = {\n        id: 4\n    };\nm.set(x, y);\nx = null; // { id: 1 } 可GC\ny = null; // { id: 2 } 可GC 只因 { id: 1 } 可GC\nm.set(z, w);\n\nw = null // { id: 4 } 不可GC\n\nconsole.log(m)\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br")])]),s("h2",{attrs:{id:"对-for-in-循环的优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对-for-in-循环的优化"}},[n._v("#")]),n._v(" 对 for in 循环的优化")]),n._v(" "),s("p",[n._v("在上面的代码中，我们遍历数组和对象都使用了 forin 这种方式，实际上 forin 在遍历时效率是非常低的，")]),n._v(" "),s("p",[n._v("通过测试三种循环 for、while、forin 的执行效率，while 的效率是最好的，所以，我们可以想办法把 forin 遍历改变为 while 遍历。")]),n._v(" "),s("p",[n._v("我们先使用 while 来实现一个通用的 forEach 遍历， iteratee 是遍历的回掉函数，他可以接收每次遍历的 value 和 index 两个参数：")]),n._v(" "),s("div",{staticClass:"language-plain line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[n._v('function forEach(target, iteratee) {\n    let index = -1;\n    const len = target.length;\n    while (++index < len) {\n        iteratee(target[index], index)\n    }\n    return target;\n}\n\nfunction clone(target, map = new WeakMap()) {\n    if (typeof target === "object") {\n        let cloneTarget = Array.isArray(target) ? [] : {}\n        if (map.get(target)) {\n            return map.get(target)\n        }\n        map.set(target, cloneTarget);\n        // for (let i in target) {\n        //     cloneTarget[i] = clone(target[i], map)\n        // }\n        let keys = Array.isArray(target) ? undefined : Object.keys(target)\n        forEach(keys || target, (v, i) => {\n            if (keys) {\n                i = v;\n            }\n            cloneTarget[i] = clone(target[i], map)\n        })\n        return cloneTarget;\n    } else {\n        return target;\n    }\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br")])]),s("h2",{attrs:{id:"其他数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他数据类型"}},[n._v("#")]),n._v(" 其他数据类型")]),n._v(" "),s("h3",{attrs:{id:"合理判断是否为引用类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合理判断是否为引用类型"}},[n._v("#")]),n._v(" 合理判断是否为引用类型")]),n._v(" "),s("p",[n._v("首先先判段是否为引用类型，在这判断时注意 ⚠️ null 与 function 两种特殊类型")]),n._v(" "),s("div",{staticClass:"language-plain line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[n._v('function isProtoType(target) {\n    let type = typeof target;\n    return target !== null && (type === "object" || type === "function");\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br")])]),s("h3",{attrs:{id:"获取数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取数据类型"}},[n._v("#")]),n._v(" 获取数据类型")]),n._v(" "),s("p",[n._v("我们可以使用 toString 来获取准确的引用类型：")]),n._v(" "),s("p",[n._v('每一个引用类型都有 toString 方法，默认情况下， toString()方法被每个 Object 对象继承。如果此方法在自定义对象中未被覆盖，toString()返回 "[object type]"，其中 type 是对象的类型。')]),n._v(" "),s("p",[n._v("注意 ⚠️，上面提到了如果此方法在自定义对象中未被覆盖， toString 才会达到预想的效果，事实上，大部分引用类型比如 Array、Date、RegExp 等都重写了 toString 方法")]),n._v(" "),s("div",{staticClass:"language-plain line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[n._v("function getType(target) {\n    return Object.prototype.toString.call(target).slice(8, -1);\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br")])]),s("p",[n._v("下面我们抽离出一些常用的数据类型以便后面使用：")]),n._v(" "),s("div",{staticClass:"language-plain line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[n._v("const mapTag = 'Map';\n\nconst setTag = 'Set';\n\nconst arrayTag = 'Array';\n\nconst objectTag = 'Object';\n\n\n\nconst boolTag = 'Boolean';\n\nconst dateTag = 'Date';\n\nconst errorTag = 'Error';\n\nconst numberTag = 'Number';\n\nconst regexpTag = 'RegExp';\n\nconst stringTag = 'String';\n\nconst symbolTag = 'Symbol';\n\n\n\nconst bufferTag = 'Uint8Array';\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br")])]),s("p",[n._v("在上面的集中类型中，我们简单将他们分为两类：")]),n._v(" "),s("p",[n._v("可以继续遍历的类型")]),n._v(" "),s("p",[n._v("不可以继续遍历的类型")]),n._v(" "),s("p",[n._v("我们分别为它们做不同的拷贝。")]),n._v(" "),s("h3",{attrs:{id:"可继续遍历的类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可继续遍历的类型"}},[n._v("#")]),n._v(" 可继续遍历的类型")]),n._v(" "),s("p",[n._v("上面我们已经考虑的 object、 array 都属于可以继续遍历的类型，因为它们内存都还可以存储其他数据类型的数据，另外还有 Map， Set 等都是可以继续遍历的类型，这里我们只考虑这四种;")]),n._v(" "),s("p",[n._v("有序这几种类型还需要继续进行递归，我们首先需要获取它们的初始化数据，例如上面的 []和 {}，我们可以通过拿到 constructor 的方式来通用的获取。")]),n._v(" "),s("p",[n._v("例如 let consttarget={}就是 let consttarget=new Object()的语法糖。另外这种方法还有一个好处：因为我们还使用了原对象的构造方法，类似于装箱,所以它可以保留对象原型上的数据，如果直接使用普通的 {}，那么原型必然是丢失了的。")]),n._v(" "),s("p",[n._v("下面，我们改写 clone 函数，对可继续遍历的数据类型进行处理：")]),n._v(" "),s("div",{staticClass:"language-plain line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[n._v("function foreach(target, callback) {\n    let index = -1,\n        len = target.length;\n    while (++index < len) {\n        callback(target[index], index)\n    }\n    return target;\n}\n\nfunction isProtoType(target) {\n    let type = typeof target;\n    return target !== null && (type === \"object\" || type === \"function\");\n}\n\nfunction getType(target) {\n    return Object.prototype.toString.call(target).slice(8, -1);\n}\n\nconst mapTag = 'Map';\n\nconst setTag = 'Set';\n\nconst arrayTag = 'Array';\n\nconst objectTag = 'Object';\n\n\n\nconst boolTag = 'Boolean';\n\nconst dateTag = 'Date';\n\nconst errorTag = 'Error';\n\nconst numberTag = 'Number';\n\nconst regexpTag = 'RegExp';\n\nconst stringTag = 'String';\n\nconst symbolTag = 'Symbol';\n\n\n\nconst bufferTag = 'Uint8Array';\n\nfunction getInit(target) {\n    let ClassNames = target.constructor;\n\n    return new ClassNames();\n}\n//好了一切准备别就绪，可继续遍历的类型 考虑类型 Object Array Map Set\n\nconst deepTag = [mapTag, setTag, objectTag, arrayTag];\n\nfunction clone(target, map = new WeakMap()) {\n    //克隆原始类型\n    if (!isProtoType(target)) {\n        return target;\n    }\n    //初始化类型\n    const type = getType(target);\n    let cloneTarget;\n\n    if (deepTag.includes(type)) {\n\n        cloneTarget = getInit(target);\n    }\n\n    //防止循环引用\n    if (map.get(target)) {\n        return map.get(target);\n    }\n    map.set(target, cloneTarget);\n    //如果是map拷贝\n\n    if (type === mapTag) {\n        target.forEach((v, key) => {\n            cloneTarget.set(key, clone(v, map))\n        })\n        return cloneTarget;\n    }\n\n    //拷贝set\n\n    if (type === setTag) {\n        target.forEach(v => {\n            cloneTarget.add(clone(v, map))\n        })\n        return cloneTarget;\n    }\n\n    //拷贝数组与对象\n\n    const keys = type === arrayTag ? undefined : Object.keys(target);\n    foreach(keys || target, (v, index) => {\n        if (keys) {\n            index = v;\n        }\n        cloneTarget[index] = clone(target[index], map)\n    })\n    return cloneTarget;\n}\nconst map = new Map();\n\nmap.set('key', 'value');\n\nmap.set('name', 'wendaoshuai')\n\n\n\nconst set = new Set();\n\nset.add('11').add('liushuai')\n\nconst target = {\n\n    field1: 1,\n\n    field2: undefined,\n\n    field3: {\n\n        child: 'child'\n\n    },\n\n    field4: [\n        2,\n        4,\n        8\n    ],\n    empty: null,\n    map,\n    set\n};\ntarget.target = target;\nconst target1 = clone(target)\ntarget1.a = \"a\"\nconsole.log('🍎', target)\nconsole.log('🍌', target1)\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br"),s("span",{staticClass:"line-number"},[n._v("53")]),s("br"),s("span",{staticClass:"line-number"},[n._v("54")]),s("br"),s("span",{staticClass:"line-number"},[n._v("55")]),s("br"),s("span",{staticClass:"line-number"},[n._v("56")]),s("br"),s("span",{staticClass:"line-number"},[n._v("57")]),s("br"),s("span",{staticClass:"line-number"},[n._v("58")]),s("br"),s("span",{staticClass:"line-number"},[n._v("59")]),s("br"),s("span",{staticClass:"line-number"},[n._v("60")]),s("br"),s("span",{staticClass:"line-number"},[n._v("61")]),s("br"),s("span",{staticClass:"line-number"},[n._v("62")]),s("br"),s("span",{staticClass:"line-number"},[n._v("63")]),s("br"),s("span",{staticClass:"line-number"},[n._v("64")]),s("br"),s("span",{staticClass:"line-number"},[n._v("65")]),s("br"),s("span",{staticClass:"line-number"},[n._v("66")]),s("br"),s("span",{staticClass:"line-number"},[n._v("67")]),s("br"),s("span",{staticClass:"line-number"},[n._v("68")]),s("br"),s("span",{staticClass:"line-number"},[n._v("69")]),s("br"),s("span",{staticClass:"line-number"},[n._v("70")]),s("br"),s("span",{staticClass:"line-number"},[n._v("71")]),s("br"),s("span",{staticClass:"line-number"},[n._v("72")]),s("br"),s("span",{staticClass:"line-number"},[n._v("73")]),s("br"),s("span",{staticClass:"line-number"},[n._v("74")]),s("br"),s("span",{staticClass:"line-number"},[n._v("75")]),s("br"),s("span",{staticClass:"line-number"},[n._v("76")]),s("br"),s("span",{staticClass:"line-number"},[n._v("77")]),s("br"),s("span",{staticClass:"line-number"},[n._v("78")]),s("br"),s("span",{staticClass:"line-number"},[n._v("79")]),s("br"),s("span",{staticClass:"line-number"},[n._v("80")]),s("br"),s("span",{staticClass:"line-number"},[n._v("81")]),s("br"),s("span",{staticClass:"line-number"},[n._v("82")]),s("br"),s("span",{staticClass:"line-number"},[n._v("83")]),s("br"),s("span",{staticClass:"line-number"},[n._v("84")]),s("br"),s("span",{staticClass:"line-number"},[n._v("85")]),s("br"),s("span",{staticClass:"line-number"},[n._v("86")]),s("br"),s("span",{staticClass:"line-number"},[n._v("87")]),s("br"),s("span",{staticClass:"line-number"},[n._v("88")]),s("br"),s("span",{staticClass:"line-number"},[n._v("89")]),s("br"),s("span",{staticClass:"line-number"},[n._v("90")]),s("br"),s("span",{staticClass:"line-number"},[n._v("91")]),s("br"),s("span",{staticClass:"line-number"},[n._v("92")]),s("br"),s("span",{staticClass:"line-number"},[n._v("93")]),s("br"),s("span",{staticClass:"line-number"},[n._v("94")]),s("br"),s("span",{staticClass:"line-number"},[n._v("95")]),s("br"),s("span",{staticClass:"line-number"},[n._v("96")]),s("br"),s("span",{staticClass:"line-number"},[n._v("97")]),s("br"),s("span",{staticClass:"line-number"},[n._v("98")]),s("br"),s("span",{staticClass:"line-number"},[n._v("99")]),s("br"),s("span",{staticClass:"line-number"},[n._v("100")]),s("br"),s("span",{staticClass:"line-number"},[n._v("101")]),s("br"),s("span",{staticClass:"line-number"},[n._v("102")]),s("br"),s("span",{staticClass:"line-number"},[n._v("103")]),s("br"),s("span",{staticClass:"line-number"},[n._v("104")]),s("br"),s("span",{staticClass:"line-number"},[n._v("105")]),s("br"),s("span",{staticClass:"line-number"},[n._v("106")]),s("br"),s("span",{staticClass:"line-number"},[n._v("107")]),s("br"),s("span",{staticClass:"line-number"},[n._v("108")]),s("br"),s("span",{staticClass:"line-number"},[n._v("109")]),s("br"),s("span",{staticClass:"line-number"},[n._v("110")]),s("br"),s("span",{staticClass:"line-number"},[n._v("111")]),s("br"),s("span",{staticClass:"line-number"},[n._v("112")]),s("br"),s("span",{staticClass:"line-number"},[n._v("113")]),s("br"),s("span",{staticClass:"line-number"},[n._v("114")]),s("br"),s("span",{staticClass:"line-number"},[n._v("115")]),s("br"),s("span",{staticClass:"line-number"},[n._v("116")]),s("br"),s("span",{staticClass:"line-number"},[n._v("117")]),s("br"),s("span",{staticClass:"line-number"},[n._v("118")]),s("br"),s("span",{staticClass:"line-number"},[n._v("119")]),s("br"),s("span",{staticClass:"line-number"},[n._v("120")]),s("br"),s("span",{staticClass:"line-number"},[n._v("121")]),s("br"),s("span",{staticClass:"line-number"},[n._v("122")]),s("br"),s("span",{staticClass:"line-number"},[n._v("123")]),s("br"),s("span",{staticClass:"line-number"},[n._v("124")]),s("br"),s("span",{staticClass:"line-number"},[n._v("125")]),s("br"),s("span",{staticClass:"line-number"},[n._v("126")]),s("br"),s("span",{staticClass:"line-number"},[n._v("127")]),s("br"),s("span",{staticClass:"line-number"},[n._v("128")]),s("br"),s("span",{staticClass:"line-number"},[n._v("129")]),s("br"),s("span",{staticClass:"line-number"},[n._v("130")]),s("br"),s("span",{staticClass:"line-number"},[n._v("131")]),s("br"),s("span",{staticClass:"line-number"},[n._v("132")]),s("br"),s("span",{staticClass:"line-number"},[n._v("133")]),s("br"),s("span",{staticClass:"line-number"},[n._v("134")]),s("br"),s("span",{staticClass:"line-number"},[n._v("135")]),s("br"),s("span",{staticClass:"line-number"},[n._v("136")]),s("br"),s("span",{staticClass:"line-number"},[n._v("137")]),s("br"),s("span",{staticClass:"line-number"},[n._v("138")]),s("br"),s("span",{staticClass:"line-number"},[n._v("139")]),s("br"),s("span",{staticClass:"line-number"},[n._v("140")]),s("br"),s("span",{staticClass:"line-number"},[n._v("141")]),s("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);