(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{312:function(s,a,n){"use strict";n.r(a);var e=n(10),t=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"ecmascript5-1-新增语法上"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript5-1-新增语法上"}},[s._v("#")]),s._v(" ECMAScript5.1 新增语法上")]),s._v(" "),a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),a("p",[s._v("ECMAScript 5.1 (或仅 ES5) 是 ECMAScript(基于 JavaScript 的规范)标准最新修正。 与 HTML5 规范进程本质类似，ES5 通过对现有 JavaScript 方法添加语句和原生 ECMAScript 对象做合并实现标准化。ES5 还引入了一个语法的严格变种，被称为”严格模式(strict mode)”。")]),s._v(" "),a("h2",{attrs:{id:"浏览器支持情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器支持情况"}},[s._v("#")]),s._v(" 浏览器支持情况")]),s._v(" "),a("p",[s._v("随着 Opera 11.60 的发布, 所有 5 大浏览器都支持 ES5, 除了一些实现的 bugs. 除非另有说明，一切可以用在以下浏览器版本（或更高）：")]),s._v(" "),a("p",[s._v("Opera 11.60")]),s._v(" "),a("p",[s._v("Internet Explorer 9*")]),s._v(" "),a("p",[s._v("Firefox 4")]),s._v(" "),a("p",[s._v("Safari 5.1**")]),s._v(" "),a("p",[s._v("Chrome 13")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("* IE9不支持严格模式 — IE10 添加\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("** Safari 5.1 仍不支持 Function.prototype.bind, \n尽管 Function.prototype.bind现在已经被Webkit所支持。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("对于旧版浏览器的支持信息,查看"),a("a",{attrs:{href:"http://kangax.github.io/compat-table/es5/",target:"_blank",rel:"noopener noreferrer"}},[s._v("ECMAScript 5 兼容性表"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("想再 ie8 或者其他更低的浏览器用 可以查看"),a("a",{attrs:{href:"https://www.npmjs.com/package/es5-shim",target:"_blank",rel:"noopener noreferrer"}},[s._v("es5-shim"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"严格模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#严格模式"}},[s._v("#")]),s._v(" 严格模式")]),s._v(" "),a("p",[s._v("严格模式给作者提供了选择一个限制性更强语言变种的方式——给作者提供额外的可靠性给用户提供额外的安全性。在 JS 文件或是函数的顶部添加"),a("code",[s._v('"use strict"')]),s._v('即可启用严格模式。因为"use strict"就是个字符串，因此其会被旧版浏览器安全地忽视。')]),s._v(" "),a("p",[s._v("在 js 文件顶部添加 use strict")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v('"use strict"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在函数顶部添加 use strict")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v('function strict(){\n"use strict";\nreturn "这是严格模式。";\n}\n\n\nfunction notStrict() {\nreturn "这是正常模式。";\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[a("a",{attrs:{href:"https://www.npmjs.com/package/es5-shim",target:"_blank",rel:"noopener noreferrer"}},[s._v("MDSN 的严格模式文章"),a("OutboundLink")],1),s._v("有个关于所有这些差异很有用的总结表格。")]),s._v(" "),a("h3",{attrs:{id:"严格模式下无法再意外创建全局变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#严格模式下无法再意外创建全局变量"}},[s._v("#")]),s._v(" 严格模式下无法再意外创建全局变量")]),s._v(" "),a("p",[s._v("不允许给未声明的变量赋值")]),s._v(" "),a("p",[s._v("例如")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v('//不在严格模式下\nfunction test(){\n      a= 1\n    console.log(a)//1\n}\ntest()\n\n//在严格模式下\nfunction test(){\n    "use strict"\n    a= 1\n    console.log(a)//此处就会抛出 ReferenceError ：a is not defined\n}\ntest()\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h3",{attrs:{id:"不允许对象字面量属性重复命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不允许对象字面量属性重复命名"}},[s._v("#")]),s._v(" 不允许对象字面量属性重复命名")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("!function() {\n    var obj = { x: 1, x: 2 };\n    console.log(obj.x);  //2\n}();\n\n!function() {\n    'use strict';\n    var obj = { x: 1, x: 2 };  \n    console.log(obj.x);  // IE10+报错。IE7~9、Chrome、FF不报错，结果为：2\n}()\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h3",{attrs:{id:"严格模式下给不可写属性赋值-给只读属性-getter-only-赋值赋值-给不可扩展对象-non-extensible-object-的新属性赋值都会抛出异常"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#严格模式下给不可写属性赋值-给只读属性-getter-only-赋值赋值-给不可扩展对象-non-extensible-object-的新属性赋值都会抛出异常"}},[s._v("#")]),s._v(" 严格模式下给不可写属性赋值, 给只读属性(getter-only)赋值赋值, 给不可扩展对象(non-extensible object)的新属性赋值都会抛出异常")]),s._v(" "),a("p",[s._v("给不可写的属性赋值")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("//正常模式\n(function (){\n    var obj1 = {}\n     Object.defineProperty(obj1,'x',{value:1,writable:false});\n     obj1.x= 9\n     console.log(obj1.x)//1\n})()\n\n//严格模式\n(function (){\n    \"use strict\"\n    var obj1 = {}\n     Object.defineProperty(obj1,'x',{value:1,writable:false});\n     obj1.x= 9  \n     //抛出TypeError错误 \n     //错误为Cannot assign to read only property 'x' of object '#<Object>'\n     console.log(obj1.x)\n})()\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("给只读属性赋值")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v('\n//正常模式下 \n(function (){\n    var obj2 = {get x(){return 17}}\n    obj2.x = 9\n    console.log(obj2.x)//17\n})()\n\n//严格模式下\n(function (){\n    "use strict"\n    var obj2 = {get x(){return 17}}\n    obj2.x = 9\n     //抛出TypeError错误 \n     //错误为Cannot set property x of #<Object> which has only a getter\n     console.log(obj1.x)\n    console.log(obj2.x)\n})()\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("给不可扩展的新属性赋值")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v('//正常模式下\n (function (){\n    var obj3 ={}\n    Object.preventExtensions(obj3)\n    obj3.x= 3\n    console.log(obj3.x)//undefined\n})()\n\n//严格模式下\n (function (){\n    "use strict"\n    var obj3 ={}\n    Object.preventExtensions(obj3)\n    obj3.x= 3\n    console.log(obj3.x)\n    //抛出TypeError错误 \n    // Cannot add property x, object is not extensible\n})()\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("h3",{attrs:{id:"严格模式下-试图删除不可删除的属性时会抛出异常"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#严格模式下-试图删除不可删除的属性时会抛出异常"}},[s._v("#")]),s._v(" 严格模式下, 试图删除不可删除的属性时会抛出异常")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v(" (function (){\n    \"use strict\"\n    delete Object.prototype\n    //抛出TypeError错误 \n    //Cannot delete property 'prototype' of function Object() { [native code] }\n})()\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"严格模式要求函数的参数名唯一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#严格模式要求函数的参数名唯一"}},[s._v("#")]),s._v(" 严格模式要求函数的参数名唯一")]),s._v(" "),a("p",[s._v("在正常模式下, 最后一个重名参数名会掩盖之前的重名参数. 之前的参数仍然可以通过 arguments[i] 来访问, 还不是完全无法访问. 然而, 这种隐藏毫无意义而且可能是意料之外的 (比如它可能本来是打错了), 所以在严格模式下重名参数被认为是语法错误")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("//正常模式下\n(function (a,a,b){\n    console.log(a+a+b)//7\n    //之前的a会被之后的a掩盖\n    console.log(arguments[0])//1\n    //之前的a可以通过arguments[0]访问到\n    console.log(arguments[1])//2\n})(1,2,3)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"严格模式禁止八进制数字语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#严格模式禁止八进制数字语法"}},[s._v("#")]),s._v(" 严格模式禁止八进制数字语法")]),s._v(" "),a("p",[s._v('CMAScript 并不包含八进制语法, 但所有的浏览器都支持这种以零(0)开头的八进制语法: 0644 === 420 还有 "\\045" === "%".在 ECMAScript 6 中支持为一个数字加"0o"的前缀来表示八进制数.')]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("\n//正常模式下\n(function (){\n    var a = 0644; \n    //es6写法 a =0o644\n    console.log(a)//420\n})()\n\n//严格模式下\n(function (){\n     'use strice'\n    var a = 0644; \n    //抛出TypeError错误\n    //错误为：Octal literals are not allowed in strict mode.\n    console.log(a)\n})()\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h3",{attrs:{id:"ecmascript-6-中的严格模式禁止设置-primitive-值的属性-不采用严格模式-设置属性将会简单忽略-no-op-采用严格模式-将抛出-typeerror-错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript-6-中的严格模式禁止设置-primitive-值的属性-不采用严格模式-设置属性将会简单忽略-no-op-采用严格模式-将抛出-typeerror-错误"}},[s._v("#")]),s._v(" ECMAScript 6 中的严格模式禁止设置 primitive 值的属性.不采用严格模式,设置属性将会简单忽略(no-op),采用严格模式,将抛出 TypeError 错误")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v(" (function (){\n    \"use strict\"\n    false.true = \"\"; \n    //抛出异常Cannot create property 'true' on boolean 'false'\n})()\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v(' (function (){\n    "use strict"\n    "with".you = "far away"; \n    //抛出异常Cannot create property \'you\' on string \'with\'\n})()\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"严格模式禁用-with"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#严格模式禁用-with"}},[s._v("#")]),s._v(" 严格模式禁用 with")]),s._v(" "),a("p",[s._v("with 所引起的问题是块内的任何名称可以映射(map)到 with 传进来的对象的属性, 也可以映射到包围这个块的作用域内的变量(甚至是全局变量), 这一切都是在运行时决定的: 在代码运行之前是无法得知的. 严格模式下, 使用 with 会引起语法错误, 所以就不会存在 with 块内的变量在运行是才决定引用到哪里的情况了")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v('"use strict";\nvar x = 17;\nwith (obj) { // !!! 语法错误\n  // 如果没有开启严格模式，with中的这个x会指向with上面的那个x，还是obj.x？\n  // 如果不运行代码，我们无法知道，因此，这种代码让引擎无法进行优化，速度也就会变慢。\n  x;\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("一种取代 with 的简单方法是，将目标对象赋给一个短命名变量，然后访问这个变量上的相应属性.")]),s._v(" "),a("h3",{attrs:{id:"严格模式下的-eval-不再为上层范围-包围-eval-代码块的范围-引入新变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#严格模式下的-eval-不再为上层范围-包围-eval-代码块的范围-引入新变量"}},[s._v("#")]),s._v(" 严格模式下的 eval 不再为上层范围（包围 eval 代码块的范围）引入新变量")]),s._v(" "),a("p",[s._v("首先理解 eval")]),s._v(" "),a("p",[s._v("JavaScript 中的 eval(..) 函数可以接受一个字符串为参数，并将其中的内容视为好像在书 写时就存在于程序中这个位置的代码。换句话说，可以在你写的代码中用程序生成代码并 运行，就好像代码是写在那个位置的一样。")]),s._v(" "),a("p",[s._v("在严格模式的程序中，eval(..) 在运行时有其自己的词法作用域，意味着其 中的声明无法修改所在的作用域。")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v('function foo(str) {\n    "use strict";\n    eval( str );\n    console.log( a ); // ReferenceError: a is not defined\n}\nfoo( "var a = 2" );\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"严格模式禁止删除声明变量。delete-name-在严格模式下会引起语法错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#严格模式禁止删除声明变量。delete-name-在严格模式下会引起语法错误"}},[s._v("#")]),s._v(" 严格模式禁止删除声明变量。delete name 在严格模式下会引起语法错误")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v('"use strict";\n\nvar x;\ndelete x; // !!! 语法错误\n\neval("var y; delete y;"); // !!! 语法错误\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json"}},[s._v("#")]),s._v(" JSON")]),s._v(" "),a("p",[s._v("ES5 提供一个全局的 JSON 对象，用来序列化(JSON.stringify)和反序列化(JSON.parse)对象为 JSON 格式。")]),s._v(" "),a("p",[s._v("对于老的浏览器，可以考虑使用 Douglas Crockford 的"),a("a",{attrs:{href:"https://github.com/douglascrockford/JSON-js/blob/master/json2.js",target:"_blank",rel:"noopener noreferrer"}},[s._v("json2.js"),a("OutboundLink")],1),s._v(", 可以让旧的浏览器实现同样的功能（原始支持功能测试后）。")]),s._v(" "),a("h3",{attrs:{id:"json-parse-text-reviver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json-parse-text-reviver"}},[s._v("#")]),s._v(" JSON.parse(text [, reviver])")]),s._v(" "),a("p",[s._v("JSON.parse 接受文本(JSON 格式)并转换成一个 ECMAScript 值。该可选的 reviver 参数是有带有 key 和 value 两个参数的函数，其作用于结果——让过滤和转换返回值成为可能。")]),s._v(" "),a("p",[s._v("如果我们想确保解析的值是个整数，我们可以使用 reviver 方法。")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v('var result = JSON.parse(\'{"a": 1, "b": "2"}\', function(key, value){\n  if (typeof value == \'string\'){\n    return parseInt(value);\n  } else {\n    return value; \n  }\n})\nresult.b //2\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"json-stringify-value-replacer-space"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json-stringify-value-replacer-space"}},[s._v("#")]),s._v(" JSON.stringify(value [, replacer [, space]])")]),s._v(" "),a("p",[s._v("JSON.stringify 允许作者接受一个 ECMAScript 值然后转换成 JSON 格式的字符串。 在其最简单的形式中，JSON.stringify 接受一个值返回一个字符串")]),s._v(" "),a("p",[s._v("如果我们需要改变值字符串化的方式，或是对我们选择的提供过滤，我们可以将其传给 replacer 函数。例如，我们想过滤出即将被字符串化的对象中值为 13 的属性：")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v('\nvar nums = {\n  "first": 7,\n  "second": 14,\n  "third": 13\n}\n\nvar luckyNums = JSON.stringify(nums, function(key, value){\n  if (value == 13) {\n    return undefined;\n  } else {\n    return value;\n  }\n});\n\n>> luckyNums\n\'{"first": 7, "second": 14}\'\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("如果 replacer 方法返回 undefined, 则键值对就不会包含在最终的 JSON 中。我们同样可以传递一个 space 参数以便获得返回结果的可读性帮助。space 参数可以是个数字，表明了作缩进的 JSON 字符串或字符串每个水平上缩进的空格数。如果参数是个超过 10 的数值，或是超过 10 个字符的字符串，将导致取数值 10 或是截取前 10 个字符")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v('var luckyNums = JSON.stringify(nums, function(key, value) {\n  if (value == 13) {\n    return undefined;\n  } else {\n    return value;\n  }\n}, 2);\n\n>> luckyNums\n\'{\n  "first":7,\n  "second":14\n}\'\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"添加对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加对象"}},[s._v("#")]),s._v(" 添加对象")]),s._v(" "),a("h3",{attrs:{id:"_1-object-keys-获取对象的-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-object-keys-获取对象的-key"}},[s._v("#")]),s._v(" 1.Object.keys() 获取对象的 key")]),s._v(" "),a("h3",{attrs:{id:"_2-object-create-获取对象的副本-实现类的继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-object-create-获取对象的副本-实现类的继承"}},[s._v("#")]),s._v(" 2.Object.create() 获取对象的副本，实现类的继承")]),s._v(" "),a("h3",{attrs:{id:"_3-object-assign-浅拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-object-assign-浅拷贝"}},[s._v("#")]),s._v(" 3.Object.assign() 浅拷贝")]),s._v(" "),a("h3",{attrs:{id:"_4-object-defineproperty-obj-prop-descriptor-直接在一个对象上定义一个新属性-或者修改一个对象的现有属性-并返回这个对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-object-defineproperty-obj-prop-descriptor-直接在一个对象上定义一个新属性-或者修改一个对象的现有属性-并返回这个对象"}},[s._v("#")]),s._v(" 4.Object.defineProperty(obj, prop, descriptor) 直接在一个对象上定义一个新属性，或者修改一个对象的现有属性， 并返回这个对象")]),s._v(" "),a("p",[s._v("语法  Object.defineProperty(obj, prop, descriptor)")]),s._v(" "),a("p",[s._v("obj 要在其上定义属性的对象。")]),s._v(" "),a("p",[s._v("prop 要定义或修改的属性的名称。")]),s._v(" "),a("p",[s._v("descriptor 将被定义或修改的属性描述符。")]),s._v(" "),a("p",[s._v("属性描述符：数据描述符和存取描述符")]),s._v(" "),a("p",[s._v("数据描述符和存取描述符均有以下可选键值")]),s._v(" "),a("p",[s._v("configurable 默认为 false 为 true  该属性描述符才能够被改变，同时该属性也能从对应的对象上被删除\n数据描述符可选键值")]),s._v(" "),a("p",[s._v("该属性对应的值。value： 可以是任何有效的 JavaScript 值（数值，对象，函数等）。默认为 undefined。")]),s._v(" "),a("p",[s._v("writable:当且仅当该属性的 writable 为 true 时，value 才能被赋值运算符改变。默认为 false")]),s._v(" "),a("h3",{attrs:{id:"_5-object-defineproperties-obj-props-在其上定义或修改属性的对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-object-defineproperties-obj-props-在其上定义或修改属性的对象"}},[s._v("#")]),s._v(" 5.Object.defineProperties(obj, props) 在其上定义或修改属性的对象")]),s._v(" "),a("h3",{attrs:{id:"_6-object-entries-返回一个给定对象自身可枚举属性的键值对数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-object-entries-返回一个给定对象自身可枚举属性的键值对数组"}},[s._v("#")]),s._v(" 6.Object.entries() 返回一个给定对象自身可枚举属性的键值对数组")]),s._v(" "),a("h3",{attrs:{id:"_7-onject-fromentries-可以将-map-转化为-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-onject-fromentries-可以将-map-转化为-object"}},[s._v("#")]),s._v(" 7.Onject.fromEntries() 可以将 Map 转化为 Object")]),s._v(" "),a("h3",{attrs:{id:"_8-object-freeze"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-object-freeze"}},[s._v("#")]),s._v(" 8.Object.freeze()")]),s._v(" "),a("p",[s._v("可以冻结一个对象，冻结指的是不能向这个对象添加新的属性，不能修改其已有属性的值，不能删除已有属性，以及不能修改该对象已有属性的可枚举性、可配置性、可写性。该方法返回被冻结的对象。")]),s._v(" "),a("h3",{attrs:{id:"_9-object-is-判断两个值是否是相同的值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-object-is-判断两个值是否是相同的值"}},[s._v("#")]),s._v(" 9.Object.is() 判断两个值是否是相同的值")]),s._v(" "),a("h3",{attrs:{id:"_10-object-values-返回一个数组-其元素是在对象上找到的可枚举属性值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-object-values-返回一个数组-其元素是在对象上找到的可枚举属性值"}},[s._v("#")]),s._v(" 10.Object.values() 返回一个数组，其元素是在对象上找到的可枚举属性值")])])}),[],!1,null,null,null);a.default=t.exports}}]);