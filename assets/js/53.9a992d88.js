(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{336:function(t,a,v){"use strict";v.r(a);var s=v(10),_=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"javascript-与-qa-测试工程师"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-与-qa-测试工程师"}},[t._v("#")]),t._v(" JavaScript 与 QA 测试工程师")]),t._v(" "),a("h2",{attrs:{id:"单元测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单元测试"}},[t._v("#")]),t._v(" 单元测试")]),t._v(" "),a("h3",{attrs:{id:"目的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目的"}},[t._v("#")]),t._v(" 目的")]),t._v(" "),a("p",[t._v("单元测试能够让开发者明确知道代码结果")]),t._v(" "),a("h3",{attrs:{id:"原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原则"}},[t._v("#")]),t._v(" 原则")]),t._v(" "),a("p",[t._v("单一职责 （通俗的理解的话是管好你自己的事）")]),t._v(" "),a("p",[t._v("接口抽象")]),t._v(" "),a("p",[t._v("层次分离")]),t._v(" "),a("h3",{attrs:{id:"断言库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#断言库"}},[t._v("#")]),t._v(" 断言库")]),t._v(" "),a("p",[t._v("保证最小单元式是否正常运行检测方法")]),t._v(" "),a("h3",{attrs:{id:"测试风格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试风格"}},[t._v("#")]),t._v(" 测试风格")]),t._v(" "),a("p",[t._v("都是敏捷开发方法论")]),t._v(" "),a("p",[t._v("测试驱动开发（Test-Driven Development TDD）：关注所有的功能是否被实现（每一个功能都会有相应的测试用例），suite 配合 test 利用 assert（tobi == ueser.name）")]),t._v(" "),a("p",[t._v("行为驱动开发（Behavior-Driven Development BDD）：关注整体行为是否否和整体预期，编写每行代码都有目的提供一个全面的测试用例集")]),t._v(" "),a("h3",{attrs:{id:"单元测试框架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单元测试框架"}},[t._v("#")]),t._v(" 单元测试框架")]),t._v(" "),a("p",[t._v("better-assert（TDD 断言库 Github）")]),t._v(" "),a("p",[t._v("should.js(BDD 断言库 Github)")]),t._v(" "),a("p",[t._v("expect.js（BDD 断言库 Github）")]),t._v(" "),a("p",[t._v("chaai.js（TDD BDD 双模 Github）")]),t._v(" "),a("p",[t._v("Jasmine.js（BDD Github）")]),t._v(" "),a("p",[t._v("Node.js")]),t._v(" "),a("h3",{attrs:{id:"单元测试运行流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单元测试运行流程"}},[t._v("#")]),t._v(" 单元测试运行流程")]),t._v(" "),a("p",[t._v("每一个测试用例通过 describe 进行设置")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://wendaoshuai66.github.io/study/note/images/ceshiyongli.png",alt:"单元测试流程"}})]),t._v(" "),a("p",[t._v("1.before 单个测试用例开始之前")]),t._v(" "),a("p",[t._v("2.beforeEach 每一个测试用例开始之前")]),t._v(" "),a("p",[t._v("3.it 定义测试用例，并利用断言库进行设置 chai 如 expect(x).to.equal(true);")]),t._v(" "),a("p",[t._v("异步 mocha")]),t._v(" "),a("p",[t._v("4.以上术语叫 mock")]),t._v(" "),a("h3",{attrs:{id:"自动化单元测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动化单元测试"}},[t._v("#")]),t._v(" 自动化单元测试")]),t._v(" "),a("p",[t._v("karma 自动化 runner 集成 PhantomJS 无刷新")]),t._v(" "),a("h3",{attrs:{id:"步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤"}},[t._v("#")]),t._v(" 步骤")]),t._v(" "),a("p",[t._v("1.新建一个文件夹，安装 node.js,进入文件夹 在终端中 npm init -y 初始化项目")]),t._v(" "),a("h2",{attrs:{id:"性能测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能测试"}},[t._v("#")]),t._v(" 性能测试")]),t._v(" "),a("p",[t._v("面向切面编程 AOP 无侵入式统计")]),t._v(" "),a("p",[t._v("Benchmark 基准测试 （样本）")]),t._v(" "),a("h2",{attrs:{id:"压力测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#压力测试"}},[t._v("#")]),t._v(" 压力测试")]),t._v(" "),a("p",[t._v("1.对网络接口做压力测试需要检测几个常用指标有 吞吐率 响应时间和并发数")]),t._v(" "),a("p",[t._v("2.PV 网站当日访问人数 UV 独立访问人数。QPS = PV/t")]),t._v(" "),a("p",[t._v("常用的压力测试工具 ab siege http_load")]),t._v(" "),a("h2",{attrs:{id:"安全测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安全测试"}},[t._v("#")]),t._v(" 安全测试")]),t._v(" "),a("p",[t._v("XSS")]),t._v(" "),a("p",[t._v("SQl")]),t._v(" "),a("p",[t._v("CSRF")]),t._v(" "),a("h2",{attrs:{id:"功能测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能测试"}},[t._v("#")]),t._v(" 功能测试")]),t._v(" "),a("p",[t._v("用户真实性检查")])])}),[],!1,null,null,null);a.default=_.exports}}]);