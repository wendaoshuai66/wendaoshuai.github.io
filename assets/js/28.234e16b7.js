(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{311:function(s,n,a){"use strict";a.r(n);var e=a(10),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"面试题积累-1"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#面试题积累-1"}},[s._v("#")]),s._v(" 面试题积累 1")]),s._v(" "),n("h2",{attrs:{id:"promsie-all-实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#promsie-all-实现"}},[s._v("#")]),s._v(" Promsie.all 实现")]),s._v(" "),n("p",[s._v("记住一下几点")]),s._v(" "),n("p",[s._v("1.Promise.all 的返回值是一个 promise 实例")]),s._v(" "),n("p",[s._v("如果传入的参数为空的可迭代对象，Promise.all 会 同步 返回一个已完成状态的 promise")]),s._v(" "),n("p",[s._v("如果传入的参数中不包含任何 promise,Promise.all 会 异步 返回一个已完成状态的 promise (不包含 promise，意味着不会一直 pending 和 rejected )")]),s._v(" "),n("p",[s._v("其它情况下，Promise.all 返回一个 处理中（pending） 状态的 promise.")]),s._v(" "),n("p",[s._v("2.Promise.all 返回的 promise 的状态")]),s._v(" "),n("p",[s._v("如果传入的参数中的 promise 都变成完成状态，Promise.all 返回的 promise 异步地变为完成。")]),s._v(" "),n("p",[s._v("如果传入的参数中，有一个 promise 失败，Promise.all 异步地将失败的那个结果给失败状态的回调函数，而不管其它 promise 是否完成")]),s._v(" "),n("p",[s._v("在任何情况下，Promise.all 返回的 promise 的完成状态的结果都是一个数组")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("Promise.all = function(prosmises) {\n                if (!Array.isArray(prosmises)) {\n                    throw new TypeError('You must pass to an array')\n                }\n                return new Promise(function(resolve, reject) {\n                    var len = prosmises.length,\n                        results = [],\n                        count = len;\n                    if (len == 0) {\n                        resolve()\n                    }\n\n                    function resolves(inxdex) {\n                        return function(value) {\n                            resolveAll(inxdex, value)\n                        }\n                    }\n\n                    function resolveAll(index, value) {\n                        results[index] = value;\n                        --count;\n                        if (count == 0) {\n                            resolve(results)\n                        }\n                    }\n\n                    function rejects(value) {\n                        reject(value)\n                        return\n                    }\n                    for (let i = 0; i < len; i++) {\n                        Promise.resolve(prosmises[i]).then(resolves(i), rejects)\n                    }\n                })\n            }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br")])]),n("h2",{attrs:{id:"promsie-race-实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#promsie-race-实现"}},[s._v("#")]),s._v(" Promsie.race 实现")]),s._v(" "),n("p",[s._v("Promise.race 功能")]),s._v(" "),n("p",[s._v("Promise.race(iterable) 返回一个 promise，一旦 iterable 中的一个 promise 状态是 fulfilled / rejected ，那么 Promise.race 返回的 promise 状态是 fulfilled / rejected")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("let p = Promise.race([p1, p2, p3]);\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("只要 p1、p2、p3 之中有一个实例率先改变状态，p 的状态就跟着改变。那个率先改变的 Promise 实例的返回值，就传递给 p 的回调函数。")]),s._v(" "),n("p",[s._v("Promise.race 的特点")]),s._v(" "),n("p",[s._v("Promise.race 的返回值是一个 promise 实例")]),s._v(" "),n("p",[s._v("1.如果传入的参数为空的可迭代对象，那么 Promise.race 返回的 promise 永远是 pending 态\n如果传入的参数中不包含任何 promise，Promise.race 会返回一个处理中（pending）的 promise\n如果 iterable 包含一个或多个非 promise 值或已经解决的 promise，则 Promise.race 将解析为 iterable 中找到的第一个值。")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("Promise.race = function(promsies) {\n            if (!Array.isArray(promsies)) {\n                throw new TypeError('You must pass to an array')\n            }\n            return new Promise(function(resolve, reject) {\n                var len = promsies.length,\n                    result = [],\n                    count = len;\n\n                if (len === 0) {plainplainplainplain\n                    //空的可迭代对象;\n                    //用于在pending态\n                } else {\n                    function resolver(value) {\n                        resolve(value)\n                    }\n\n                    function rejects(value) {\n                        reject(value)\n                        return\n                    }\n                    for (var i = 0; i < len; i++) {\n                        Promise.resolve(promsies[i]).then(resolver, rejects)\n                    }\n                }\n            })\n        }\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("h2",{attrs:{id:"为啥-await-在-foreach-中不生效"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为啥-await-在-foreach-中不生效"}},[s._v("#")]),s._v(" 为啥 await 在 forEach 中不生效")]),s._v(" "),n("h3",{attrs:{id:"不知道你有没有写过类似的代码-反正以前我是写过"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#不知道你有没有写过类似的代码-反正以前我是写过"}},[s._v("#")]),s._v(" 不知道你有没有写过类似的代码，反正以前我是写过")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("function test() {\n\tlet arr = [3, 2, 1]\n\tarr.forEach(async item => {\n\t\tconst res = await fetch(item)\n\t\tconsole.log(res)\n\t})\n\tconsole.log('end')\n}\nfunction fetch(x) {\n\treturn new Promise((resolve, reject) => {\n\t\tsetTimeout(() => {\n\t\t\tresolve(x)\n\t\t}, 500 * x)\n\t})\n}\n\ntest()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("我当时期望的打印顺序是")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("3\n2\n1\nend\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("结果现实与我开了个玩笑，打印顺序居然是")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("end\n1\n2\n3\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"为什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么"}},[s._v("#")]),s._v(" 为什么")]),s._v(" "),n("p",[s._v("其实原因很简单，那就是 forEach 只支持同步代码。")]),s._v(" "),n("p",[s._v("我们可以参考下 Polyfill 版本的 forEach，简化以后类似就是这样的伪代码")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("while (index < arr.length) {\n\t\t// 也就是我们传入的回调函数\n\t\tcallback(item, index)\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("从上述代码中我们可以发现，forEach 只是简单的执行了下回调函数而已，并不会去处理异步的情况。并且你在 callback 中即使使用 break 也并不能结束遍历")]),s._v(" "),n("h3",{attrs:{id:"怎么解决"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#怎么解决"}},[s._v("#")]),s._v(" 怎么解决")]),s._v(" "),n("p",[s._v("一般来说解决的办法有两种。")]),s._v(" "),n("p",[s._v("第一种是使用 Promise.all 的方式")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("\nasync function test() {\n\tlet arr = [3, 2, 1]\n\tawait Promise.all(\n\t\tarr.map(async item => {\n\t\t\tconst res = await fetch(item)\n\t\t\tconsole.log(res)\n\t\t})\n\t)\n\tconsole.log('end')\n}\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("这样可以生效的原因是 async 函数肯定会返回一个 Promise 对象，调用 map 以后返回值就是一个存放了 Promise 的数组了，这样我们把数组传入 Promise.all 中就可以解决问题了。但是这种方式其实并不能达成我们要的效果，如果你希望内部的 fetch 是顺序完成的，可以选择第二种方式")]),s._v(" "),n("p",[s._v("另一种方法是使用 for...of")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("async function test() {\n\tlet arr = [3, 2, 1]\n\tfor (const item of arr) {\n\t\tconst res = await fetch(item)\n\t\tconsole.log(res)\n\t}\n\tconsole.log('end')\n}\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("因为 for...of 内部处理的机制和 forEach 不同，forEach 是直接调用回调函数，for...of 是通过迭代器的方式去遍历")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("async function test() {\n\tlet arr = [3, 2, 1]\n\tconst iterator = arr[Symbol.iterator](.)\n\tlet res = iterator.next()\n\twhile (!res.done) {\n\t\tconst value = res.value\n\t\tconst res1 = await fetch(value)\n\t\tconsole.log(res1)\n\t\tres = iterator.next()\n\t}\n\tconsole.log('end')\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("以上代码等价于 for...of，可以看成 for...of 是以上代码的语法糖。")]),s._v(" "),n("h3",{attrs:{id:"延伸"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#延伸"}},[s._v("#")]),s._v(" 延伸")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("let a = 0;\n        let test = async() => {\n            a = a + await 10;\n            console.log(a)\n        }\n        test()\n        console.log(++a)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("一般会认为输出")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("1\n11\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("实际输出")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("1\n10\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("这里 await 会对 a 冻结")]),s._v(" "),n("h2",{attrs:{id:"new-的实现原理是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#new-的实现原理是什么"}},[s._v("#")]),s._v(" new 的实现原理是什么")]),s._v(" "),n("p",[s._v("首先引用小黄书中话")]),s._v(" "),n("p",[s._v("使用 new 来调用函数，或者说发生构造函数调用时，会自动执行下面的操作：")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("创建(或者说构造)一个全新的对象。")])]),s._v(" "),n("li",[n("p",[s._v("这个新对象会被执行[[原型]]连接。")])]),s._v(" "),n("li",[n("p",[s._v("这个新对象会绑定到函数调用的 this。")])]),s._v(" "),n("li",[n("p",[s._v("如果函数没有返回其他对象，那么 new 表达式中的函数调用会自动返回这个新对象。")])])]),s._v(" "),n("p",[s._v("版本 1")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("function _new(func) {\n            return function() {\n                let target = {\n                    __proto__: func.prototype\n                }\n                func.call(target, ...arguments);\n                return target;\n            }\n        }\n\n        function Perpson(name, age) {plainplainplainplainplainplain\n            this.name = name;\n            this.age = age;\n        }\n        let person = _new(Perpson)('liushuai', 18)\n        console.log(person)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[s._v("版本 2")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('function _new() {\n    let target = {}; //创建的新对象\n    //第一个参数是构造函数\n    let [constructor, ...args] = [...arguments];\n    //执行[[原型]]连接;target 是 constructor 的实例\n    target.__proto__ = constructor.prototype;\n    //执行构造函数，将属性或方法添加到创建的空对象上\n    let result = constructor.apply(target, args);\n    if (result && (typeof(result) == "object" || typeof(result) == "function")) {\n        //如果构造函数执行的结构返回的是一个对象，那么返回这个对象\n        return result;\n    }\n    //如果构造函数返回的不是一个对象，返回创建的新对象\n    return target;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h2",{attrs:{id:"手动实现-instanceof"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#手动实现-instanceof"}},[s._v("#")]),s._v(" 手动实现 instanceof")]),s._v(" "),n("h3",{attrs:{id:"原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("a instanceof Object\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("判断 Object 的 prototype 是否在 a 的原型链上。")]),s._v(" "),n("h3",{attrs:{id:"实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[s._v("#")]),s._v(" 实现")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("function myInstance(target, org) {\n            var proto = target.__proto__;\n            if (proto) {\n                if (proto === org.prototype) {\n                    return true;\n                } else {\n                    return myInstance(proto, org)\n                }\n            } else {\n                return false;\n            }\n        }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h3",{attrs:{id:"验证"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[s._v("#")]),s._v(" 验证")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("var A = function() {};\n    A.prototype = {};\n    var a = new A();\n    A.prototype = {};\n    var b = new A();\n    console.log(a instanceof A); //false\n    console.log(b instanceof A); //true\n    console.log(myInstance(a, A)) //false\n    console.log(myInstance(b, A)) // true\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h2",{attrs:{id:"手动实现-call、apply"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#手动实现-call、apply"}},[s._v("#")]),s._v(" 手动实现 call、apply")]),s._v(" "),n("p",[s._v("谈起 call 和 apply 这两个 Function.prototype 上的方法可能很熟悉了，它在继承，改变 this 指针上有很多的应用场景。接下来我们简单的来重新回忆一下 call 和 apply 这两个函数的功能")]),s._v(" "),n("h3",{attrs:{id:"例子一"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#例子一"}},[s._v("#")]),s._v(" 例子一")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("let obj = {\n            a: 20\n        }\n\n        function func() {plainplainplainplainplainplain\n            console.log(this.a)\n        }\n        func.call(obj) //20\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h3",{attrs:{id:"例子-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#例子-2"}},[s._v("#")]),s._v(" 例子 2")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v(" document.getElementById('app').onclick = function() {\n            let appBtn = function() {\n                console.log(this)\n            }\n            appBtn.call(this)\n        }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"例子-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#例子-3"}},[s._v("#")]),s._v(" 例子 3")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("function FuncA(value) {\n            this.value = value;\n        }\n\n        function FuncB() {plainplainplainplainplainplainplain\n            FuncA.apply(this, arguments)\n        }\n        FuncB.prototype.getValue = function() {\n            return this.value;\n        }\n        var funcB = new FuncB('hello')\n        console.log(funcB.getValue())\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("经过上面的例子我们可以直观的知道 call apply 的作用大部分都是用作改变 this 的指针。那么接下来我们来模拟 call apply 实现简单的一下这两个函数")]),s._v(" "),n("p",[s._v("###模拟实现 call")]),s._v(" "),n("p",[s._v("1.判断当前 this 是否为函数，防止 Function.prototype.myCall() 直接调用")]),s._v(" "),n("p",[s._v("2.context 为可选参数，如果不传的话默认上下文为 window")]),s._v(" "),n("p",[s._v("3.为 context 创建一个 Symbol（保证不会重名）属性，将当前函数赋值给这个属性")]),s._v(" "),n("p",[s._v("4.处理参数，传入第一个参数后的其余参数")]),s._v(" "),n("p",[s._v("5.调用函数后即删除该 Symbol 属性")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("Function.prototype.myCall = function(context = window, ...args) {\n                if (this === Function.prototype) {\n                    return undefined; //用于防止 Function.prototype.myCall() 直接调用\n                }\n                context = context || window;\n                //防止方法冲突覆盖\n                let fn = Symbol();\n                // 改变 this\n                context[fn] = this;\n                // 将参数放入函数内\n                let result = context[fn](args)\n                    // 删除对象中的函数\n                delete context[fn]\n                return result;\n            }\n            //测试\n        document.getElementById('app').onclick = function() {\n            let appBtn = function() {\n                console.log(this)\n            }\n            appBtn.myCall(this)\n        }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("h3",{attrs:{id:"模拟实现-apply"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#模拟实现-apply"}},[s._v("#")]),s._v(" 模拟实现 apply")]),s._v(" "),n("p",[s._v("apply 实现类似 call，参数为数组")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("Function.prototype.myApply = function(context, args) {\n            if (this === Function.prototype) {\n                return undefined;\n            }\n            context = context || window;\n            let fn = Symbol()\n            context[fn] = this;\n            let result;\n            if (Array.isArray(args)) {\n                result = context[fn](...args)\n            } else {\n                result = context[fn](.)\n            }\n            return result;\n        }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h3",{attrs:{id:"settimeout-模拟实现-setinterval"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#settimeout-模拟实现-setinterval"}},[s._v("#")]),s._v(" setTimeout 模拟实现 setInterval")]),s._v(" "),n("p",[s._v("可避免 setInterval 因执行时间导致的间隔执行时间不一致")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("setTimeout(function() {\n            //dosomething\n            console.log(11)\n            setTimeout(arguments.callee, 1000)\n        }, 1000)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"手写拖拽"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#手写拖拽"}},[s._v("#")]),s._v(" 手写拖拽")]),s._v(" "),n("h4",{attrs:{id:"html-5-拖放"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#html-5-拖放"}},[s._v("#")]),s._v(" HTML 5 拖放")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v(' <style>\n        #div1 {\n            width: 300px;\n            height: 300px;\n            background: red;\n        }\n    </style>\n<script type="text/javascript">\n        function allowDrop(ev) {\n            ev.preventDefault();\n        }\n\n        function drag(ev) {\n            ev.dataTransfer.setData("Text", ev.target.id);\n        }\n\n        function drop(ev) {\n            ev.preventDefault();\n            var data = ev.dataTransfer.getData("Text");\n            ev.target.appendChild(document.getElementById(data));\n        }\n    <\/script>\n\n <div id="div1" ondrop="drop(event)" ondragover="allowDrop(event)"></div>\n    <div id="drag1" draggable="true" ondragstart="drag(event)" style="width: 300px;height:69px;">\n        被拖拽\n    </div>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("h4",{attrs:{id:"原生-js"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原生-js"}},[s._v("#")]),s._v(" 原生 js")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("#box {\n        width: 300px;\n        height: 300px;\n        background: yellowgreen;\n        position: absolute\n    }\n<div id=\"box\">\n</div>\n\n<script>\n\n<\/script>\nlet drag = document.getElementById('box');\n        drag.onmousedown = function(e) {\n            let event = e || window.event;\n            let outX = event.clientX - drag.offsetLeft;\n            let outY = event.clientY - drag.offsetTop;\n            drag.onmousemove = function(e) {\n                let event = e || window.event;\n                let left = event.clientX - outX,\n                    top = event.clientY - outY;\n                if (left < 0) {\n                    left = 0;\n                } else if (left > (window.innerWidth - drag.offsetWidth)) {\n\n                    left = window.innerWidth - drag.offsetWidth\n                }\n                if (top < 0) {\n                    top = 0;\n                } else if (top > (window.innerHeight - drag.offsetHeight)) {\n                    top = window.innerHeight - drag.offsetHeight;\n                }\n                drag.style.left = CSS.px(left);\n                drag.style.top = CSS.px(top);\n            }\n            drag.onmouseup = function() {\n                drag.onmousemove = null;\n                drag.onmouseup = null;\n            }\n        }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);