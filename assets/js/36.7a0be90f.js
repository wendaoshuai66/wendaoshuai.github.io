(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{319:function(s,a,e){"use strict";e.r(a);var n=e(10),r=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"nodejs-框架入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-框架入门"}},[s._v("#")]),s._v(" NodeJs 框架入门")]),s._v(" "),a("h2",{attrs:{id:"什么是-express"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-express"}},[s._v("#")]),s._v(" 什么是 Express")]),s._v(" "),a("p",[s._v("Express 是一个简洁而灵活的 nodejs Web 应用框架，提供了一系列强大特性帮助你创建各种 Web 应用。")]),s._v(" "),a("h2",{attrs:{id:"express-框架的特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#express-框架的特性"}},[s._v("#")]),s._v(" Express 框架的特性")]),s._v(" "),a("p",[s._v("可以设置中间件来响应 http 请求")]),s._v(" "),a("p",[s._v("定义了路由表用于执行不同的 http 请求动作")]),s._v(" "),a("p",[s._v("可以通过向模板传递参数来动态渲染 HTML 页面")]),s._v(" "),a("h2",{attrs:{id:"什么是中间件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是中间件"}},[s._v("#")]),s._v(" 什么是中间件")]),s._v(" "),a("p",[s._v("上面 Exress 框架的特性第一条就提到了中间件，中间件是贯穿 Expres 全程的一个东西，到底什么是中间件。")]),s._v(" "),a("h5",{attrs:{id:"所谓中间件就是-从客户端请求的一端到服务器响应客户端的一端中间所使用到的插件就叫做中间件。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#所谓中间件就是-从客户端请求的一端到服务器响应客户端的一端中间所使用到的插件就叫做中间件。"}},[s._v("#")]),s._v(" 所谓中间件就是：从客户端请求的一端到服务器响应客户端的一端中间所使用到的插件就叫做中间件。")]),s._v(" "),a("h3",{attrs:{id:"中间件的功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#中间件的功能"}},[s._v("#")]),s._v(" 中间件的功能")]),s._v(" "),a("p",[s._v("1.执行任何代码")]),s._v(" "),a("p",[s._v("2.修改请求和响应对象")]),s._v(" "),a("p",[s._v("3.终结请求-响应循环。")]),s._v(" "),a("p",[s._v("4.调用堆栈的下一个中间件 如果当前中间件没有终结请求响应循环(res.render,res.send,res.json 等)，则必须调用 next()方法把控制权交给下一个中间件。如果终止了的话，下一个中间件渲染会报错，但是 node 代码正常执行。")]),s._v(" "),a("h3",{attrs:{id:"express-应用中间件的类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#express-应用中间件的类型"}},[s._v("#")]),s._v(" Express 应用中间件的类型")]),s._v(" "),a("p",[s._v("应用级中间件")]),s._v(" "),a("p",[s._v("路由级中间件")]),s._v(" "),a("p",[s._v("错误处理中间件")]),s._v(" "),a("p",[s._v("内置中间件")]),s._v(" "),a("p",[s._v("第三方中间件")]),s._v(" "),a("h3",{attrs:{id:"应用级中间件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用级中间件"}},[s._v("#")]),s._v(" 应用级中间件")]),s._v(" "),a("p",[s._v("应用级中间件绑定到 app 对象使用 app.use()和 app.METHOD 方法(HTTP 方法)")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("const app = express();\n    //没有挂在路径的中间件，应用的所有请求都会执行该中间件\n    app.use((req,res,next) => {\n        console.log('必经路由')\n        next();\n    })\n    //挂在路径的中间件，任何指向此路径的中间件都会执行它\n    app.use('/user/:id',(req,res.next) => {\n        console.log('/user/中间件')\n        next();\n    })\n    //使用http方法的中间件\n    app.get('/user/:id',(req,res,next) => {\n        res.send('http方法中间件')\n    })\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h3",{attrs:{id:"装载组中间件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#装载组中间件"}},[s._v("#")]),s._v(" 装载组中间件")]),s._v(" "),a("p",[s._v("装载组中间件就是对一个挂载点挂载一组中间件。")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("app.use(/user/:id,(req,res,next) => {\n    console.log('one');\n    next();\n},(req,res,next) => {\n    console.log('two');\n    next();\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("如果在中间件栈中跳过剩余的中间件，可以使用 next(‘route’)方法将控制权交给下一个路由。")]),s._v(" "),a("h5",{attrs:{id:"注意-next-route-只对使用-app-声明的和-router-声明的中间件有效。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-next-route-只对使用-app-声明的和-router-声明的中间件有效。"}},[s._v("#")]),s._v(" 注意：next(‘route’)只对使用 app 声明的和 router 声明的中间件有效。")]),s._v(" "),a("h3",{attrs:{id:"路由级中间件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由级中间件"}},[s._v("#")]),s._v(" 路由级中间件")]),s._v(" "),a("p",[s._v("路由级中间件和应用级中间件一样，只是它绑定的对象为 express.Router();")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("const router = express.Router()\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("router 中间件和 app 中间件处理的情况一样，只是 router 中没有 app 中特别复杂的 api，只有路由。参照应用级中间件的使用方法。")]),s._v(" "),a("h3",{attrs:{id:"错误处理中间件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误处理中间件"}},[s._v("#")]),s._v(" 错误处理中间件")]),s._v(" "),a("p",[s._v("错误处理中间件有 4 个参数，定义错误处理中间件时必须使用这 4 个参数，即使不需要 next 对象，也必须在方法签名中声明它，否则把会错误处理中间件当做常规中间件处理。错误中间件容错要放在所有中间件后面。")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("app.use((err,req,res,next) => {\n    console.log(err.stack);\n    res.status(500).send('服务端出错');\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"内置中间件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内置中间件"}},[s._v("#")]),s._v(" 内置中间件")]),s._v(" "),a("p",[s._v("express.static 是 Express 唯一内置的中间件，它基于 server-static,负责在 Express 中托管静态资源.")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v(" app.use(express.static('public'));\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"第三方中间件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三方中间件"}},[s._v("#")]),s._v(" 第三方中间件")]),s._v(" "),a("p",[s._v("安装第三方中间件，通过使用 app.use 的方式把第三方中间件加载到应用里面，可以在应用级加载，也可以在路由级加载。")]),s._v(" "),a("p",[s._v("比如 cookie-parse：用于解析 cookie,如果不使用这个，就拿不到 cookie")]),s._v(" "),a("p",[s._v("body-parser nodejs 中间件，用于处理 JSON、Raw、Text 和 URL 编码的数据")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("npm install body-parse –save\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("cookie-parser 这就是一个解析 Cookie 的工具，通过 req.cookies 可以取到传过来的 cookie，并把他们转成对象")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("npm install cookie-parser –save\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("multer nodejs 中间件，用于处理 enctype=‘multipart/form-data’(设置表单的 MIME 编码)的表单数据")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("npm install multer –save\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"如何开发一个第三方中间件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何开发一个第三方中间件"}},[s._v("#")]),s._v(" 如何开发一个第三方中间件")]),s._v(" "),a("p",[s._v("由上面总结可得知，一个中间件就是一个函数，而第三方中间件同样也是一个全局的应用级中间件。通过这些信息就可以写出一个中间件。")]),s._v(" "),a("p",[s._v("例如：开发一个事件中间件，在 req 上绑定使用事件")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("const timeMiddleware() => (req,res,next) => {\n    req.requestTime = Date.now();\n    //更复杂的处理逻辑\n    next();\n}\nmodule.exports = timeMiddleware;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("引入和使用")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("const timeMiddle = require('timeMiddleware');\napp.use(timeMiddle());\napp.get('/',(req,res) => {\n    console.log(req.requestTime);\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("这样一个简单的中间件就完成了。")]),s._v(" "),a("h2",{attrs:{id:"使用-express"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-express"}},[s._v("#")]),s._v(" 使用 Express")]),s._v(" "),a("h3",{attrs:{id:"安装-experss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-experss"}},[s._v("#")]),s._v(" 安装 experss")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("npm install express –save\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h5",{attrs:{id:"注意-项目名不要和包名相同-否则无法安装依赖包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-项目名不要和包名相同-否则无法安装依赖包"}},[s._v("#")]),s._v(" 注意：项目名不要和包名相同，否则无法安装依赖包")]),s._v(" "),a("h3",{attrs:{id:"创建-app-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建-app-js"}},[s._v("#")]),s._v(" 创建 app.js")]),s._v(" "),a("p",[s._v("在项目根目录创建 app.js ，app.js 是 express 框架的启动文件。")]),s._v(" "),a("h3",{attrs:{id:"在-app-js-中引入-express-模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在-app-js-中引入-express-模块"}},[s._v("#")]),s._v(" 在 app.js 中引入 express 模块")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("const express = require('express');\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"通过-express-实例化-express-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过-express-实例化-express-对象"}},[s._v("#")]),s._v(" 通过 express 实例化 express 对象")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("const app = express();\n//相当于\nconst app = new express();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"app-对象的一些常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#app-对象的一些常用方法"}},[s._v("#")]),s._v(" app 对象的一些常用方法")]),s._v(" "),a("p",[s._v("app.use 通过 app.use 引入中间件")]),s._v(" "),a("p",[s._v("app.route 注册路由")]),s._v(" "),a("p",[s._v("app.listen 创建 web 服务")]),s._v(" "),a("p",[s._v("app.METHOD(METHOD 为 http 方法)拿到当前用户的路由,渲染结果。")]),s._v(" "),a("p",[s._v("app.set 设置所需要的模板")]),s._v(" "),a("p",[s._v("app.engine 设置模板用什么模板引擎编译")]),s._v(" "),a("h3",{attrs:{id:"创建一个-express-web-服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建一个-express-web-服务"}},[s._v("#")]),s._v(" 创建一个 express Web 服务")]),s._v(" "),a("p",[s._v("在 app.js 中书写一下代码。")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("const express = require('express');\nconst app = express();\n\napp.get('/',(req,res)=>{\n    res.send('hello express')\n})\n\napp.listen('3000',()=>{\n    console.log('启动成功')\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h3",{attrs:{id:"启动服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动服务"}},[s._v("#")]),s._v(" 启动服务")]),s._v(" "),a("p",[s._v("在项目根目录终端使用下面命令")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("node app.js\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("至此一个 web 服务就启动了，但是问题来了，当我们修改代码的时候，页面并不会修改，只能手动停掉服务，然后再启动才会生效。所以要开启热启动")]),s._v(" "),a("h3",{attrs:{id:"开启热启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启热启动"}},[s._v("#")]),s._v(" 开启热启动")]),s._v(" "),a("p",[s._v("热启动的方法有两种：一种是 supervisor,一种是 nodemon")]),s._v(" "),a("p",[s._v("1.supervisor")]),s._v(" "),a("p",[s._v("安装")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("npm install supervisor -g\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("启动")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("supervisor app.js\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("2.nodemon")]),s._v(" "),a("p",[s._v("安装")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("npm install nodemon -g\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("启动")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("nodemon app.js\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"用户的请求与响应对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用户的请求与响应对象"}},[s._v("#")]),s._v(" 用户的请求与响应对象")]),s._v(" "),a("p",[s._v("在开启服务的使用，每一个对应的请求里面都会有请求对象和响应对象。")]),s._v(" "),a("h4",{attrs:{id:"request-用户发出的请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-用户发出的请求"}},[s._v("#")]),s._v(" request：用户发出的请求")]),s._v(" "),a("p",[s._v("req.query 拿到所有的用户请求参数(get 请求)")]),s._v(" "),a("p",[s._v("req.body 当使用 post 请求的使用，使用中间件获得参数，参数会在 req.body 里面。")]),s._v(" "),a("p",[s._v("req.params 拿到对应的路由参数")]),s._v(" "),a("p",[s._v("req.app 当 callback 为外部文件时，用 req.app 访问 express 的实例")]),s._v(" "),a("p",[s._v("req.baseUrl 获取路由当前安装的 URL 路径")]),s._v(" "),a("p",[s._v("req.hostname 获取主机名")]),s._v(" "),a("p",[s._v("req.ip 获取 IP 地址")]),s._v(" "),a("p",[s._v("req.route 获取当前匹配的路由")]),s._v(" "),a("p",[s._v("req.path 获取请求路径")]),s._v(" "),a("p",[s._v("req.subdomains 获取子域名")]),s._v(" "),a("p",[s._v("req.get() 获取指定的 HTTP 请求头")]),s._v(" "),a("p",[s._v("req.is() 判断请求头 Content-Type 的 MIME 类型")]),s._v(" "),a("p",[s._v("req.protocol 获取协议类型")]),s._v(" "),a("p",[s._v("req.cookies 获得 Cookies")]),s._v(" "),a("h4",{attrs:{id:"response-服务端向用户输出的东西"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-服务端向用户输出的东西"}},[s._v("#")]),s._v(" response：服务端向用户输出的东西")]),s._v(" "),a("p",[s._v("res.download() 提示下载文件")]),s._v(" "),a("p",[s._v("res.end() 终结响应处理流程")]),s._v(" "),a("p",[s._v("res.json() 发送一个 JSON 格式的响应")]),s._v(" "),a("p",[s._v("res.jsonp() 发送和一个支持 JSONP 格式的响应")]),s._v(" "),a("p",[s._v("res.redirect() 重定向请求")]),s._v(" "),a("p",[s._v("res.render() 渲染视图模板")]),s._v(" "),a("p",[s._v("res.send() 发送各种类型的数据")]),s._v(" "),a("p",[s._v("res.sendFile() 以八字节流的形式发送文件")]),s._v(" "),a("p",[s._v("res.sendStatus() 设置响应状态码，并将其以字符串的形式作为响应体一部分发出去")]),s._v(" "),a("p",[s._v("res.cookie(name，value [，option]) 设置 Cookie")]),s._v(" "),a("p",[s._v("res.set() 设置请求头")]),s._v(" "),a("p",[s._v("res.append() 追加指定 HTTP 头")]),s._v(" "),a("p",[s._v("res.clearCookie() 清除 Cookie")]),s._v(" "),a("p",[s._v("res.type() 设置 Content-Type 的 MIME 类型")]),s._v(" "),a("h3",{attrs:{id:"路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由"}},[s._v("#")]),s._v(" 路由")]),s._v(" "),a("p",[s._v("所谓路由就是通过访问不同的 url 路径的得到不同的信息。")]),s._v(" "),a("h4",{attrs:{id:"早期的伪静态路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#早期的伪静态路由"}},[s._v("#")]),s._v(" 早期的伪静态路由")]),s._v(" "),a("p",[s._v("在路由上写/index.html，并不会访问到这个页面，代码中还是动态路由")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("app.get('/index.html',(req,res) => {\n    console.log(req.query);\n    res.send('Hello ' +  req.query.username);\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h4",{attrs:{id:"路由参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由参数"}},[s._v("#")]),s._v(" 路由参数")]),s._v(" "),a("p",[s._v("在路由后加:id,这个 id 就是路由参数,通过 req.params.id 拿到这个参数")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("app.get('/index/:id',(req,res) => {\n    console.log(req.params.id);\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h4",{attrs:{id:"restful-路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#restful-路由"}},[s._v("#")]),s._v(" RESTful 路由")]),s._v(" "),a("p",[s._v("RESTful 的核心思想就是，客户端发出的数据操作指令都是”动词 + 宾语”的结构。比如，GET /articles 这个命令，GET 是动词，/articles 是宾语。"),a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("阮一峰的 RESTful 实战"),a("OutboundLink")],1)]),s._v(" "),a("h3",{attrs:{id:"引入静态文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入静态文件"}},[s._v("#")]),s._v(" 引入静态文件")]),s._v(" "),a("p",[s._v("通过静态资源的方式引入一个静态资源文件夹 public")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("app.use(express.static('public'))\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("访问静态文件 public 目录就是根目录")]),s._v(" "),a("h5",{attrs:{id:"例如"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例如"}},[s._v("#")]),s._v(" 例如：")]),s._v(" "),a("p",[s._v("在 public 目录下创建 index.css 文件，启动服务访问http://127.0.0.1:8080/index.css 就可以访问到。")]),s._v(" "),a("h3",{attrs:{id:"渲染-html"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渲染-html"}},[s._v("#")]),s._v(" 渲染 html")]),s._v(" "),a("p",[s._v("通过 sendFile 的方式渲染出 html，在项目根目录下创建 views 文件夹用来存放渲染视图，在 views 中常见 index.html。在 app.js 中书写一下代码。")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("app.get('/index',(req,res) => {\n    res.sendFile(__dirname + '/views'+ req.url + '.html');\n})\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("通过访问http://127.0.0.1:8080/index 就可以得到")]),s._v(" "),a("h3",{attrs:{id:"通过-body-parser-取到-post-方式请求的数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过-body-parser-取到-post-方式请求的数据"}},[s._v("#")]),s._v(" 通过 body-parser 取到 post 方式请求的数据")]),s._v(" "),a("p",[s._v("安装 body-parser 包")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("npm install body-parser –save\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("引入 body-parser 包")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("const bodyParser = require(‘body-parser’);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("使用中间件")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("app.use(bodyParser.urlencoded({extended:false}))\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("取到参数")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("请求中使用req.body取得请求参数列表\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"express-路由的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#express-路由的使用"}},[s._v("#")]),s._v(" express 路由的使用")]),s._v(" "),a("h3",{attrs:{id:"什么是路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是路由"}},[s._v("#")]),s._v(" 什么是路由")]),s._v(" "),a("p",[s._v("路由是指如何定义应用的端点以及如何响应客户端的请求")]),s._v(" "),a("p",[s._v("我们所谓的 Controller 就是路由控制器")]),s._v(" "),a("h3",{attrs:{id:"路由的组成部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由的组成部分"}},[s._v("#")]),s._v(" 路由的组成部分")]),s._v(" "),a("p",[s._v("路由是由 url、http 请求(GET，post)和若干句柄组成。")]),s._v(" "),a("p",[s._v("路由结构如下：app.METHOD(path,{callback..},callback)")]),s._v(" "),a("p",[s._v("1.app 是 express 对象的一个实例")]),s._v(" "),a("p",[s._v("2.METHOD 是一个 HTTP 请求方法")]),s._v(" "),a("p",[s._v("3.path 是服务器上的路径")]),s._v(" "),a("p",[s._v("4.callback 是当路由匹配时要执行的函数。")]),s._v(" "),a("h3",{attrs:{id:"路由方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由方法"}},[s._v("#")]),s._v(" 路由方法")]),s._v(" "),a("p",[s._v("get、post、put、delete 代表 CRUD 的增删该查")]),s._v(" "),a("p",[s._v("get 方法")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("app.get('/',(req,res) => {\n    res.send('GET 请求')\n});\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("post 方法")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("app.post('/',(req,res) => {\n    res.send('POST 请求')\n});\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("put 方法")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("app.put('/',(req,res) => {\n    res.send('PUT 请求')\n});\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("delete 方法")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("app.delete('/',(req,res) => {\n    res.send('DELETE 请求')\n});\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"标准的路由格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标准的路由格式"}},[s._v("#")]),s._v(" 标准的路由格式")]),s._v(" "),a("p",[s._v("标准的路由控制格式为：controller/action 这样的形式，一个控制器对应多个操作 ID。")]),s._v(" "),a("h3",{attrs:{id:"app-all-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#app-all-方法"}},[s._v("#")]),s._v(" app.all 方法")]),s._v(" "),a("p",[s._v("app.all 是一个特殊的路由方法，没有任何 HTTP 方法与其对象，无论是什么 HTTP 请求都会命中这个路由方法。")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("app.all((req,res,next) => {\n    res.send('hello')       //无论是什么HTTP请求都会命中\n    next(); 把当前的这个请求交给下一个请求处理函数\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"路由路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由路径"}},[s._v("#")]),s._v(" 路由路径")]),s._v(" "),a("p",[s._v("路由路径与请求方法结合，定义可以进行请求的端点。路由路径可以是字符串、字符串模式和正则表达。")]),s._v(" "),a("h3",{attrs:{id:"多个路由处理函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多个路由处理函数"}},[s._v("#")]),s._v(" 多个路由处理函数")]),s._v(" "),a("p",[s._v("请求处理多个回调函数，使用 next()方法传递请求,如果应用已经响应了用户，后面的响应就不会进行了，node 代码可以继续执行。")]),s._v(" "),a("p",[s._v("方式如下：")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("app.get('/index',(req,res,next) => {\n    console.log(1);\n    next();\n},(req,res,next) =>{\n    console.log(console.log(req));\n})\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"使用回调函数数组处理路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用回调函数数组处理路由"}},[s._v("#")]),s._v(" 使用回调函数数组处理路由")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("\nconst cb0 = (req,res,next) => {\n    console.log('cb0');\n    next();\n}\nconst cb1 = (req,res, next) => {\n    console.log('cb1');\n    next();\n}\nconst cb2 = (req,res,next) => {\n    res.send('fdsaf');\n}\napp.get('/index',[cb0,cb1,cb2]);\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h3",{attrs:{id:"使用混合函数和函数数组处理路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用混合函数和函数数组处理路由"}},[s._v("#")]),s._v(" 使用混合函数和函数数组处理路由")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("const cb0 = (req,res,next) => {\n    console.log('cb0');\n    next();\n}\nconst cb1 = (req,res, next) => {\n    console.log('cb1');\n    next();\n}\napp.get('/index/b',[cb0,cb1],(req,res,next) => {\n    console.log('hello');\n    next();\n},(res,req,next) => {\n    res.send('wang');\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h3",{attrs:{id:"使用-app-route-创建路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-app-route-创建路由"}},[s._v("#")]),s._v(" 使用 app.route()创建路由")]),s._v(" "),a("p",[s._v("app.route 方法可以为一个路由路径建立多种请求方法")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("\napp.route('/index')\n    .get((req,res) => {\n        console.log('get');\n    })\n    .post((req,res) => {\n        console.log('post');\n    })\n    .put((req,res)=> {\n        console.log('put');\n    })\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h3",{attrs:{id:"使用-express-router-类创建模块化-可挂在的路由句柄"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-express-router-类创建模块化-可挂在的路由句柄"}},[s._v("#")]),s._v(" 使用 express.Router 类创建模块化，可挂在的路由句柄")]),s._v(" "),a("p",[s._v("Router 实例是一个完整的中间件和路由系统")]),s._v(" "),a("p",[s._v("使用")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("const express =require('express');\nconst router = express.Router();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("使用 router 定义全局路由(必经)")]),s._v(" "),a("p",[s._v("定义在所有路由的最顶端")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("router.use((req,res,next) => {\n    console.log('必经路由');\n    next();\n})\n二者相同\napp.use((req,res,next) => {\n    console.log('必经路由')\n    next();\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("这相当于定义了一个过滤的路由，所以路由句柄都会经过这个路由进行过滤,和*相同。")]),s._v(" "),a("p",[s._v("在应用中加载路由模块")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v(" const router = require('./router');\napp.use('/router',router);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"express-错误处理及-log4js-日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#express-错误处理及-log4js-日志"}},[s._v("#")]),s._v(" express 错误处理及 log4js 日志")]),s._v(" "),a("h3",{attrs:{id:"express-的错误处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#express-的错误处理"}},[s._v("#")]),s._v(" express 的错误处理")]),s._v(" "),a("p",[s._v("错误处理是 express 的全局一个中间件，错误处理中间件值定义在所有中间件的最下面的。它的工作流程是，只要有错误处理，有错误的中间件就会 next 到错误处理中间件，否则就不会执行到它。执行到错误处理中间件之后 web 实例又被重新唤醒继续执行 node 代码。")]),s._v(" "),a("h3",{attrs:{id:"错误处理中间件-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误处理中间件-2"}},[s._v("#")]),s._v(" 错误处理中间件")]),s._v(" "),a("p",[s._v("express 错误处理中间件有着严格的方法签名：必须要有 4 个参数，即便是用不到也要写上。")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("app.use((err,req,res,next) => {\n    console.log(err);\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("err 是错误对象\nreq 是请求对象\nres 是响应对象\nnext 是进行下一个中间件的操作")]),s._v(" "),a("h3",{attrs:{id:"两个常用的错误处理中间件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两个常用的错误处理中间件"}},[s._v("#")]),s._v(" 两个常用的错误处理中间件")]),s._v(" "),a("p",[s._v("1.404 错误")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("'use strict';\nmodule.exports = function(template){\n    return function fileNotFound(req,res,next) {\n        var model = {url : req.url,statusCode : 404};\n        if(req.xhr){\n            res.send(404,model);\n        }else {\n            res.status(404);\n            渲染出错误处理的模板\n            res.render(template,req,data);\n        }\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("2.500 错误")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("var http = requier('http');\nmodule.exports = function(template){\n    return function serverError(err,req,res,next) {\n        if(!res.statusCode || res.status != 200){\n            res.statusCode = 500;\n        }\n        var desc = http.STATUS_CORES[res.statusCode];\n        res.end(desc + '\\n' | err);\n    }\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h3",{attrs:{id:"日志系统-log4js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日志系统-log4js"}},[s._v("#")]),s._v(" 日志系统 log4js")]),s._v(" "),a("p",[s._v("log4js 是第三方日志系统。")]),s._v(" "),a("h3",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("npm install log4js –save\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[s._v("#")]),s._v(" 使用")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("const log4js = require('log4js');\nlog4js.configure({\n    appenders : {\n        log : {     //日志名字   可以写多个\n            type : 'file',      //日志类型\n            filename : './logs/log.log'     //日志存放路径\n        }\n    },\n    categories : {\n        default : {\n            appenders : ['log']     //日志名字放在这\n            level : 'info'      //日志等级，只会打印相同等级或者比此等级低的日志\n        }\n    }\n})\nvar logger = log4js.getLogger('log');   //获取到此日志\napp.use(log4js.connectLogger(logger));  //载入中间件\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h3",{attrs:{id:"日志等级区分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日志等级区分"}},[s._v("#")]),s._v(" 日志等级区分")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v('[2019-01-25T13:45:58.890] [INFO] log - ::ffff:127.0.0.1 - - "GET /err HTTP/1.1" 404 142 "" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"\n[2019-01-25T13:46:02.370] [INFO] log - ::ffff:127.0.0.1 - - "GET / HTTP/1.1" 304 - "" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"\n[2019-01-25T13:47:16.910] [INFO] log - ::ffff:127.0.0.1 - - "GET /test HTTP/1.1" 500 1582 "" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"\n[2019-01-25T13:48:39.321] [INFO] log - ::ffff:127.0.0.1 - - "GET /test HTTP/1.1" 500 1582 "" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"\n[2019-01-25T13:48:40.037] [INFO] log - ::ffff:127.0.0.1 - - "GET /test HTTP/1.1" 500 1582 "" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"\n[2019-01-25T13:48:40.220] [INFO] log - ::ffff:127.0.0.1 - - "GET /test HTTP/1.1" 500 1582 "" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"封装日志中间件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#封装日志中间件"}},[s._v("#")]),s._v(" 封装日志中间件")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("const log4js = require('log4js');\nmodule.exports = (type='file',path='./log.log',level='info')=> {\n    log4js.configure({\n        appenders : {\n            log : {     //日志名字   可以写多个\n                type : type,      //日志类型\n                filename : path     //日志存放路径\n            }\n        },\n        categories : {\n            default : {\n                appenders : ['log']     //日志名字放在这\n                level : level     //日志等级，只会打印相同等级或者比此等级低的日志\n            }\n        }\n    })\nvar logger = log4js.getLogger('log');   //获取到此日志\n    return log4js.connectLogger(logger);\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("h2",{attrs:{id:"express-模板引擎的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#express-模板引擎的使用"}},[s._v("#")]),s._v(" express 模板引擎的使用")]),s._v(" "),a("h3",{attrs:{id:"什么是模板引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是模板引擎"}},[s._v("#")]),s._v(" 什么是模板引擎")]),s._v(" "),a("p",[s._v("模板引擎就是使我们能够在应用程序中使用静态模板文件。在运行时，模板引擎用实际值替换模板文件中的变量，并将模板转换为发送到客户端的 HTML 文件。通俗的讲就是使用一个模板可以在里面写变量，写循环，然后通过服务端编译程 html 文件。")]),s._v(" "),a("h3",{attrs:{id:"swig-js-模板引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swig-js-模板引擎"}},[s._v("#")]),s._v(" swig.js 模板引擎")]),s._v(" "),a("p",[s._v("swig.js 是一个 html 模板引擎，它支持.html 后缀名。")]),s._v(" "),a("h3",{attrs:{id:"安装-swig"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-swig"}},[s._v("#")]),s._v(" 安装 swig")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("npm install swig –save\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"引入-swig"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入-swig"}},[s._v("#")]),s._v(" 引入 swig")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("const swig = require('swig');\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"设置模板引擎为-html"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置模板引擎为-html"}},[s._v("#")]),s._v(" 设置模板引擎为.html")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("app.set('view engine','html');\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"设置让-swig-来编译模板引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置让-swig-来编译模板引擎"}},[s._v("#")]),s._v(" 设置让 swig 来编译模板引擎")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("app.engine('html',swig.renderFile);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"基础模板"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础模板"}},[s._v("#")]),s._v(" 基础模板")]),s._v(" "),a("p",[s._v("在项目根目录创建 layout 文件夹存放基础模板，在其中创建基础的模板文件 layout.html,基础就是通用的模板，可以让模板继承自基础模板，省去重复的代码。内容如下。")]),s._v(" "),a("p",[s._v("上面文件中{}包裹的地方叫做区块，这样的区块留给真正要实现的文件。这里只是作为一个基础模板来使用。")]),s._v(" "),a("h3",{attrs:{id:"创建模板"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建模板"}},[s._v("#")]),s._v(" 创建模板")]),s._v(" "),a("p",[s._v("在项目中创建 views 文件夹，所有的模板引擎都放到这里面。在 views 文件夹下建立 index.html 并继承自 loyout.html，内容如下：")]),s._v(" "),a("p",[s._v("在 html 中的区块相当于往继承过来的模板中填充代码。title 这样的数据是从服务端传过来的数据。")]),s._v(" "),a("h3",{attrs:{id:"服务端渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务端渲染"}},[s._v("#")]),s._v(" 服务端渲染")]),s._v(" "),a("p",[s._v("使用服务端渲染，渲染出模板，并且可以往模板中传递数据。")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("app.get('/test',(req,res) => {\n    res.rendr('index',{\n        title : '测试首页',\n        data : 'Hello express'\n    })\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("这时 index.html 就可以修改一下。")]),s._v(" "),a("p",[s._v("这样就可以取到值了。")]),s._v(" "),a("h5",{attrs:{id:"注意-模板不要滥用-所用的数据都往前台输出-会造成模板和后台的压力很大-而把一些有必要的东西输出。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-模板不要滥用-所用的数据都往前台输出-会造成模板和后台的压力很大-而把一些有必要的东西输出。"}},[s._v("#")]),s._v(" 注意：模板不要滥用，所用的数据都往前台输出，会造成模板和后台的压力很大，而把一些有必要的东西输出。")]),s._v(" "),a("h2",{attrs:{id:"koa"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#koa"}},[s._v("#")]),s._v(" KOA")]),s._v(" "),a("p",[s._v("Koa -- 基于 Node.js 平台的下一代 web 开发框架")]),s._v(" "),a("h3",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),a("p",[s._v("Koa 是一个新的 web 框架，由 Express 幕后的原班人马打造， 致力于成为 web 应用和 API 开发领域中的一个更小、更富有表现力、更健壮的基石。 通过利用 async 函数，Koa 帮你丢弃回调函数，并有力地增强错误处理。 Koa 并没有捆绑任何中间件， 而是提供了一套优雅的方法，帮助您快速而愉快地编写服务端应用程序。")]),s._v(" "),a("h3",{attrs:{id:"官网"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#官网"}},[s._v("#")]),s._v(" 官网")]),s._v(" "),a("p",[s._v("学习可以看"),a("a",{attrs:{href:"https://koa.bootcss.com/#",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);