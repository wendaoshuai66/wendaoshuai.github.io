(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{222:function(s,a,e){"use strict";e.r(a);var t=e(0),n=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"nodejs-入门"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-入门"}},[s._v("#")]),s._v(" NodeJS 入门")]),s._v(" "),e("h2",{attrs:{id:"什么是-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是-node"}},[s._v("#")]),s._v(" 什么是 Node")]),s._v(" "),e("p",[s._v("NodeJS 本质上是一个 JavaScript 的解释器，是 JavaScript 的运行环境。它是一个后端服务器程序，并且允许使用 JavaScript 语言定义数据结构，可以操作磁盘文件和搭建 http 服务。")]),s._v(" "),e("h5",{attrs:{id:"注意：nodejs-并不是一个-web-服务器，它是可以搭建-web-服务器的，可以说-web-服务器是-nodejs-的一个产物。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注意：nodejs-并不是一个-web-服务器，它是可以搭建-web-服务器的，可以说-web-服务器是-nodejs-的一个产物。"}},[s._v("#")]),s._v(" 注意：NodeJS 并不是一个 Web 服务器，它是可以搭建 Web 服务器的，可以说 Web 服务器是 Nodejs 的一个产物。")]),s._v(" "),e("h2",{attrs:{id:"为什么要用-nodejs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么要用-nodejs"}},[s._v("#")]),s._v(" 为什么要用 NodeJS")]),s._v(" "),e("p",[s._v("NodeJS 有以下特性值得我们去用")]),s._v(" "),e("p",[s._v("1.可以提供高性能的 Web 服务(Node 作者的初衷)")]),s._v(" "),e("p",[s._v("2.IO 性能强大(发送数据和接收数据，所依赖的条件就是输入和输出)")]),s._v(" "),e("p",[s._v("3.事件处理机制完善")]),s._v(" "),e("p",[s._v("4.天然能够处理 DOM(JavaScript 语言的能力)")]),s._v(" "),e("p",[s._v("5.社区非常活跃，生态圈日趋完善")]),s._v(" "),e("h2",{attrs:{id:"nodejs-的优势在哪里"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-的优势在哪里"}},[s._v("#")]),s._v(" NodeJS 的优势在哪里")]),s._v(" "),e("p",[s._v("1.处理大流量数据")]),s._v(" "),e("p",[s._v("2.适合实时交互的应用(在线聊天系统)")]),s._v(" "),e("p",[s._v("3.完美支持对象型数据库(Mongodb)")]),s._v(" "),e("p",[s._v("4.异步处理并发连接(很多人同事链接一台服务器就叫做并发连接)")]),s._v(" "),e("h2",{attrs:{id:"学习-nodejs-的前置知识"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#学习-nodejs-的前置知识"}},[s._v("#")]),s._v(" 学习 NodeJS 的前置知识")]),s._v(" "),e("p",[s._v("1.JavaScript")]),s._v(" "),e("p",[s._v("2.ES6")]),s._v(" "),e("p",[s._v("3.一些服务器相关的知识(网络相关的知识)")]),s._v(" "),e("p",[s._v("4.最好在 Linux 系统上进行开发")]),s._v(" "),e("h2",{attrs:{id:"相关资料和学习网站"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相关资料和学习网站"}},[s._v("#")]),s._v(" 相关资料和学习网站")]),s._v(" "),e("p",[s._v("1."),e("a",{attrs:{href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方网站"),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("2."),e("a",{attrs:{href:"https://nodejs.org/zh-cn/",target:"_blank",rel:"noopener noreferrer"}},[s._v("中文网站"),e("OutboundLink")],1)]),s._v(" "),e("h2",{attrs:{id:"安装-nodejs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-nodejs"}},[s._v("#")]),s._v(" 安装 NodeJS")]),s._v(" "),e("p",[s._v("在上面官网下载。不同的操作系统下载相应的版本，学习的话最好安装最新版(LTS:表示长期稳定版本)。Source Code 就是 NodeJS 的源代码，是用 C++编写的。")]),s._v(" "),e("p",[s._v("切换 node 版本 可以参考该"),e("a",{attrs:{href:"https://www.cnblogs.com/kongxianghai/p/5660101.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("网站"),e("OutboundLink")],1)]),s._v(" "),e("h2",{attrs:{id:"检查是否安装成功"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#检查是否安装成功"}},[s._v("#")]),s._v(" 检查是否安装成功")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("node -v\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("上面命令是检查 Node 是否安装成功，成功的话返回安装 Node 的版本。")]),s._v(" "),e("h2",{attrs:{id:"包管理器-npm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#包管理器-npm"}},[s._v("#")]),s._v(" 包管理器 npm")]),s._v(" "),e("p",[s._v("npm 是依附于 node 的包管理器，在下载 node 的时候会相应把 npm 下载下来。检查 npm 是否下载使用以下命令,成功的话返回 npm 的版本号")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("npm -v\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"显示-npm-子命令列表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#显示-npm-子命令列表"}},[s._v("#")]),s._v(" 显示 npm 子命令列表")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("npm -help\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"升级-npm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#升级-npm"}},[s._v("#")]),s._v(" 升级 npm")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("npm install npm -g\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"查找包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查找包"}},[s._v("#")]),s._v(" 查找包")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("npm search xxx\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"npm-所能做的事"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-所能做的事"}},[s._v("#")]),s._v(" npm 所能做的事")]),s._v(" "),e("p",[s._v("允许用户从 npm 服务器下载别人编写的第三方包到本地使用。")]),s._v(" "),e("p",[s._v("允许用户从 npm 服务器下载并安装别人编写的命令行程序到本地使用。")]),s._v(" "),e("p",[s._v("允许用户将自己编写的包或命令行程序上传到 npm 服务器供别人使用")]),s._v(" "),e("h3",{attrs:{id:"npm-的官网"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-的官网"}},[s._v("#")]),s._v(" npm 的官网")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("npm 的官网"),e("OutboundLink")],1)]),s._v(" "),e("h2",{attrs:{id:"搭建一个简单的服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#搭建一个简单的服务"}},[s._v("#")]),s._v(" 搭建一个简单的服务")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//从node原声API中引入http模块\nconst http = require(\"http\");\n//使用http的createServer创建一个服务\nhttp.createServer((req,res) => {\n    //req是服务器接收浏览器请求对象。\n    //res是服务器响应浏览器请求对象。\n\n    //定义HTTP响应头\n        //第一个值是响应的状态值。\n        //第二个值是以json格式返回的响应头的必要信息。\n    res.writeHead(200,{\n        'Content-Type' : 'text/plan'\n    });\n\n    //发送响应数据\n    res.end('Hello World! \\n');\n\n//使用级联函数对监听端口的设定\n}).listen(8080)\n//服务运行后输出一行信息\nconsole.log('server is running...');\n\n//开启服务\n    //在终端中使用 node node2.js\n        //输出 server is running...\n//在浏览器访问\n    //如果node在本机上：127.0.0.1:8080\n    //如果在远程服务器上：服务器ip:8080\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br")])]),e("h2",{attrs:{id:"nodejs-的-repl-环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-的-repl-环境"}},[s._v("#")]),s._v(" NodeJS 的 REPL 环境")]),s._v(" "),e("h3",{attrs:{id:"什么是-repl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是-repl"}},[s._v("#")]),s._v(" 什么是 REPL")]),s._v(" "),e("p",[s._v("REPL 是一种交互解释器，在终端中，直接敲 node 然后回车，就进入到了 nodeREPL 环境")]),s._v(" "),e("h3",{attrs:{id:"repl-能干什么？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#repl-能干什么？"}},[s._v("#")]),s._v(" REPL 能干什么？")]),s._v(" "),e("p",[s._v("node 的 REPL 环境可以做一些简单的运算，和做一些简单的代码验证。在这个环境下可以正常的书写代码，相当于浏览器控制台的 console。")]),s._v(" "),e("h3",{attrs:{id:"node-repl-中的命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-repl-中的命令"}},[s._v("#")]),s._v(" Node REPL 中的命令")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://wendaoshuai66.github.io/study/note/images/repl.png",alt:"Node REPL中的命令"}})]),s._v(" "),e("h2",{attrs:{id:"node-js-回调机制及事件驱动模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-js-回调机制及事件驱动模型"}},[s._v("#")]),s._v(" Node.js 回调机制及事件驱动模型")]),s._v(" "),e("h3",{attrs:{id:"什么是回调"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是回调"}},[s._v("#")]),s._v(" 什么是回调")]),s._v(" "),e("p",[s._v("函数的调用分为三种：同步调用、回调和异步调用。")]),s._v(" "),e("p",[s._v("回调是一种双向调用")]),s._v(" "),e("h5",{attrs:{id:"被调用的一个函数在被调用的使用会反过来调用它的主调函数，这种情况叫做双向调用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#被调用的一个函数在被调用的使用会反过来调用它的主调函数，这种情况叫做双向调用"}},[s._v("#")]),s._v(" 被调用的一个函数在被调用的使用会反过来调用它的主调函数，这种情况叫做双向调用")]),s._v(" "),e("p",[s._v("JavaScript 通过回调函数来实现回调。")]),s._v(" "),e("h2",{attrs:{id:"阻塞与非阻塞"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#阻塞与非阻塞"}},[s._v("#")]),s._v(" 阻塞与非阻塞")]),s._v(" "),e("p",[s._v("在 NodeJS 入门就说到 Node 是非阻塞是 IO，什么是阻塞什么是非阻塞呢？")]),s._v(" "),e("p",[s._v("1.阻塞和非阻塞关注的是程序在等待调用结果(消息，返回值)时的状态")]),s._v(" "),e("p",[s._v("2.阻塞就是做不完不准回来。")]),s._v(" "),e("p",[s._v("3.非阻塞就是当函数执行的时候，把函数的执行权先交给外界环境，等待其中 IO 完成之后，再把执行权返回给该函数。(通俗的将：非阻塞就是你先做，我先看看有其他事没有，完了告诉我一声。)")]),s._v(" "),e("h2",{attrs:{id:"nodejs-的回调函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-的回调函数"}},[s._v("#")]),s._v(" Nodejs 的回调函数")]),s._v(" "),e("p",[s._v("阻塞式的代码")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//引入node中的文件系统模块\nconst fs = require('fs');\n//同步读取,读取的信息按照16进制保存的\nlet data = fs.readFileSync('date.txt');      \nconsole.log(data.toString());\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("非阻塞的代码")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const fs = require('fs');\n//异步读取\n    //第一个参数是读取文件的文件路径\n    //第二个参数是异步读取文件的回调函数\nfs.readFile('test.js',function(err,data){\n    //回调函数的第一个参数是err\n    //第二个参数是读取的信息。\n    if(err){\n        return console.log(err);\n    }\n    console.log(data.toString());\n})\nconsole.log('程序执行完毕');\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("h2",{attrs:{id:"nodejs-的事件驱动模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-的事件驱动模型"}},[s._v("#")]),s._v(" NodeJS 的事件驱动模型")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://wendaoshuai66.github.io/study/note/images/eventloop.png",alt:"NodeJS的事件驱动模型"}})]),s._v(" "),e("p",[s._v("nodejs 是一个单进程单线程的运行程序，并不能并发的去完成更多的事情，只能通过事件回调实现这种并发的效果。nodejs 中的每一个 API 都是异步执行的，而且都是作为一个独立的线程在运行，使用异步函数调用就可以使用这种机制来并发处理。")]),s._v(" "),e("h3",{attrs:{id:"事件处理流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件处理流程"}},[s._v("#")]),s._v(" 事件处理流程")]),s._v(" "),e("p",[s._v("每当一个事件注册了之后就会把这个事件放入事件队列中，然后通过事件轮询依次触发事件。")]),s._v(" "),e("h3",{attrs:{id:"事件与事件绑定"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件与事件绑定"}},[s._v("#")]),s._v(" 事件与事件绑定")]),s._v(" "),e("p",[s._v("NodeJS 通过引入 events 模块，来进行事件的绑定流程如下：")]),s._v(" "),e("p",[s._v("1、引入 events 模块")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const events = require('events');\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("2、创建 eventEmitter 对象")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const eventEmitter = new events.EventEmitter();\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("3、绑定事件处理程序")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//事件处理函数\nconst connectHandle = () => {\n    console.log('connectHandle');\n}   \n//事件绑定\n    //使用eventEmitter.on方法绑定事件\n        //第一个参数：事件名称\n        //第二个参数：事件处理函数\neventEmitter.on('connection',connectHandle);   \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[s._v("4、触发事件")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("eventEmitter.emit('connection');\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"eventemitter-类自身的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#eventemitter-类自身的方法"}},[s._v("#")]),s._v(" EventEmitter 类自身的方法")]),s._v(" "),e("h4",{attrs:{id:"eventemitter-listenercount-obj-event"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#eventemitter-listenercount-obj-event"}},[s._v("#")]),s._v(" EventEmitter.listenerCount(obj,event)")]),s._v(" "),e("p",[s._v("可用来获取某个对象的指定事件的事件处理函数的数量。两个参数：")]),s._v(" "),e("p",[s._v("1.第一个参数是用于指定目标是哪个对象")]),s._v(" "),e("p",[s._v("2.二个参数是指定哪个事件")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("EventEmitter.listenerCount(http,'request');\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"eventemitter-类自身的事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#eventemitter-类自身的事件"}},[s._v("#")]),s._v(" EventEmitter 类自身的事件")]),s._v(" "),e("h4",{attrs:{id:"newlistener-事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#newlistener-事件"}},[s._v("#")]),s._v(" newListener 事件")]),s._v(" "),e("p",[s._v("当对继承了 EventEmitter 类的子类实例对象绑定事件处理函数 的时候，都会触发 EventListener 类的 newListener 事件。")]),s._v(" "),e("p",[s._v("在事件处理函数中，可使用两个参数，其中第一个参数为被绑定的事件名，第二个参数为被绑定的事件处理函数。")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("eventEmitter.on('newListener',(eventName,handler)=>{\n\tconsole.log(eventName);\n})\neventEmitter.on('request',()=>{\n\tconsole.log('listener');\n})\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h4",{attrs:{id:"removelistener-事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#removelistener-事件"}},[s._v("#")]),s._v(" removeListener 事件")]),s._v(" "),e("p",[s._v("当对继承了 EventEmitter 类的子类实例对象取消事件处理函数时，都将触发 EventEmitter 类的 removeListener 事件。")]),s._v(" "),e("p",[s._v("在事件处理函数中，可使用两个参数，其中第一个参数为被取消事件处理函数的事件名，第二个参数为被取消的事件处理函数。")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("eventEmitter.on('removeListener',(eventName,handler)=>{\n\t\tconsole.log(eventName);\n})\neventEmitter.removeAllListeners('request');\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"node-js-模块化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-js-模块化"}},[s._v("#")]),s._v(" Node.js 模块化")]),s._v(" "),e("h3",{attrs:{id:"模块化的概念与意义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模块化的概念与意义"}},[s._v("#")]),s._v(" 模块化的概念与意义")]),s._v(" "),e("p",[s._v("1.为了让 Nodejs 的文件可以相互调用，Nodejs 提供了一个简单的模块系统")]),s._v(" "),e("p",[s._v("2.模块是 Nodejs 应用程序的基本组成部分")]),s._v(" "),e("p",[s._v("3.文件和模块是一一对应的。一个 Nodejs 文件就是一个模块")]),s._v(" "),e("p",[s._v("4.这个文件可能是 JavaScript 代码、JSON 或者编译过的 C/C++扩展")]),s._v(" "),e("p",[s._v("5.Nodejs 中存在 4 类模块(原生模块和 3 种文件模块：3 种文件模块是第三方提供的，原生模块是 node 原生支持的)")]),s._v(" "),e("h3",{attrs:{id:"nodejs-中的模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-中的模块"}},[s._v("#")]),s._v(" Nodejs 中的模块")]),s._v(" "),e("p",[s._v("NodeJS 通过 require 方法加载模块，通过 exports 导出模块")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("module.exports导出单个模块\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("exports.xxx=xxx 导出模块对象\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"node-js-的模块加载流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-js-的模块加载流程"}},[s._v("#")]),s._v(" Node.js 的模块加载流程")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://wendaoshuai66.github.io/study/note/images/require.png",alt:"Node.js 的模块加载方式"}})]),s._v(" "),e("h5",{attrs:{id:"文件模块缓存区的作用：防止模块被反复的加载。节省内存，加快了模块的加载速度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件模块缓存区的作用：防止模块被反复的加载。节省内存，加快了模块的加载速度"}},[s._v("#")]),s._v(" 文件模块缓存区的作用：防止模块被反复的加载。节省内存，加快了模块的加载速度")]),s._v(" "),e("p",[s._v("1.开始 require 加载模块，首先判断是否在文件模块缓存区中，如果在就在缓存区中通过 exports 导出;")]),s._v(" "),e("p",[s._v("2.如果不在文件模块缓存区就去查找是否是原生模块(原生模块和第三方模块是不在同一个内存缓存区的),\n跳转查看是否在原生模块缓存区中，如果在的话就在缓存区中通过 exports 导出;")]),s._v(" "),e("p",[s._v("如果不在原生模块缓存区中，那么就去加载原生模块，加载原生模块的同时，把加载的原生模块放到原生模块缓冲区中，通过 exports 导出;")]),s._v(" "),e("p",[s._v("3.如果不是原生模块，就是查找第三方的文件模块，根据扩展名载入响应的文件模块，把载入的文件模块放入文件模块缓存区中，通过 exports 导出。")]),s._v(" "),e("h3",{attrs:{id:"require-方法接受一下几种参数的传递"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#require-方法接受一下几种参数的传递"}},[s._v("#")]),s._v(" require 方法接受一下几种参数的传递")]),s._v(" "),e("p",[s._v("http、fs、path 等原生模块")]),s._v(" "),e("p",[s._v("./mod 或者../mod 等相对路径的文件模块")]),s._v(" "),e("p",[s._v("/pathtomodule/mod 绝对路径的文件模块")]),s._v(" "),e("p",[s._v("mod 非原生模块的文件模块")]),s._v(" "),e("h3",{attrs:{id:"模块的三种加载方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模块的三种加载方式"}},[s._v("#")]),s._v(" 模块的三种加载方式")]),s._v(" "),e("p",[s._v("1.从文件模块缓存区中加载")]),s._v(" "),e("p",[s._v("2.从原生模块加载")]),s._v(" "),e("p",[s._v("3.从文件中加载")]),s._v(" "),e("h3",{attrs:{id:"模块加载代码示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模块加载代码示例"}},[s._v("#")]),s._v(" 模块加载代码示例")]),s._v(" "),e("p",[s._v("test.js 为子模块")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const Test = function(){\n    var name;\n    this.setName = function(newName){\n        name = newName;\n    }\n    this.sayName = function(){\n        console.log(name);\n    }\n}\nmodules.exports = Test;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("main.js 为主模块")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const Test = require('./test');\nconst test = new Test();\ntest.setName('wang');\ntest.sayName(); //wang\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"node-js-函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-js-函数"}},[s._v("#")]),s._v(" Node.js 函数")]),s._v(" "),e("p",[s._v("在 js 中，函数可以当做另外一个函数参数")]),s._v(" "),e("p",[s._v("废话不多说，直接上代码")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("function say(word){\n    console.log(word)\n}\nfunction execute(somefuction,value){\n    somefuction(value)\n}\nexecute(say,'hello ,word')\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h2",{attrs:{id:"node-js-路由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-js-路由"}},[s._v("#")]),s._v(" Node.js 路由")]),s._v(" "),e("h3",{attrs:{id:"什么是路由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是路由"}},[s._v("#")]),s._v(" 什么是路由")]),s._v(" "),e("p",[s._v("简单的说，把一个总路线分成多个方向，通过调用不同方向的标签，执行不同的程序。")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("路由表示 controller/action\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("一个浏览器网址的 ur 可能是这样的")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("www.ctomorrow.top/about/phone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("这其中的/about/phone 就构成了一个路由，about 是相应的控制器，action 是对应的控制 ID。")]),s._v(" "),e("h3",{attrs:{id:"路由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#路由"}},[s._v("#")]),s._v(" 路由")]),s._v(" "),e("p",[s._v("当我们在浏览器地址栏输入地址访问页面的时候，一个完整的地址可能是这样的：协议://域名:端口:路由?路由参数")]),s._v(" "),e("p",[s._v("###我们先来实现一个路由")]),s._v(" "),e("p",[s._v("创建一个 http 模块用于创建 http 服务")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const http = require(\"http\");\nconst url = require('url'); //引入url模块进行url解析\n\nfunction start(router){\n    const onRequest =(req,res) => {\n        //获取路由地址\n        let pathname = url.parse(req.url).pathname;\n        res.writeHead(200,{\n            'Content-Type' : 'text/plain;charset=utf8',\n        })\n    }\n    http.createServer(onRequest).listen(8080);\n}\nexports.start =start;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[s._v("创建主模块中调用 http 模块")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("\nconst http = require('./http');\nhttp.start();\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("创建 route 模块来进行不同路由的管理,不同的路由输出不同的信息。")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("function route(pathname,res){\n    console.log(pathname);\n    if(pathname == '/'){\n        res.write('欢迎来到首页');\n    }else if(pathname == '/a/g'){\n        res.write('欢迎来到/a/g');\n    }else {\n        res.write(`您访问的${pathname}不存在！`);\n    }\n    res.end();\n    \n}\n\nexports.route = route;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[s._v("在主模块中调用路由，并把路由传入 http 模块调用")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const http = require('./http');\nconst router = require('./route');\nhttp.start(router.route);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("在 http 模块中，把路由地址传入路由模块。")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const http = require(\"http\");\nconst url = require('url');\n\nfunction start(router){\n    const onRequest =(req,res) => {\n        let pathname = url.parse(req.url).pathname;\n        res.writeHead(200,{\n            'Content-Type' : 'text/plain;charset=utf8',\n        })\n        //加上这一句\n        router(pathname,res)\n    }\n    http.createServer(onRequest).listen(8080);\n}\nexports.start =start;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("h3",{attrs:{id:"请求参数解析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#请求参数解析"}},[s._v("#")]),s._v(" 请求参数解析")]),s._v(" "),e("h4",{attrs:{id:"get-请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get-请求"}},[s._v("#")]),s._v(" GET 请求")]),s._v(" "),e("p",[s._v("由于 GET 请求直接被嵌入在路径中，URL 是完整的请求路径，包括了?后面的部分，因此可以手动解析后面的内容作为 GET 请求的参数。")]),s._v(" "),e("p",[s._v("通过使用 ur 和 util 模块来输出")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const url = require('url');\nconst util = require('util');\nconst http = requier('http');\n\nhttp.createServer((req,res)=>{\n    //util的inspec方法是格式化输出\n    //url.parse是对url进行解析\n    console.log(util.inspect(url.parse(req.url,true)));\n}).listen(8080);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("Url {\n  protocol: null,\n  slashes: null,\n  auth: null,\n  host: null,\n  port: null,\n  hostname: null,\n  hash: null,\n  search: '',\n  query: {},\n  pathname: '/favicon.ico',\n  path: '/favicon.ico',\n  href: '/favicon.ico' }\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("h4",{attrs:{id:"post-请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#post-请求"}},[s._v("#")]),s._v(" POST 请求")]),s._v(" "),e("p",[s._v("POST 请求的内容全部的都在请求体中，http.ServerRequest 并没有一个属性内容为请求体，原因是等待请求体传输可能是一件耗时的工作。比如上传文件，而很多时候我们可能不需要理会请求体中的内容，恶意的 POST 请求会大大耗费服务器的资源，所有 nodejs 默认是不会解析请求体的。只有当需要的时候，手动来做。")]),s._v(" "),e("p",[s._v("通过 querystring 模块来解析 POST 请求")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const http = require('http');\nconst querystring = require('querystring');\nconst util = require('util');\nhttp.createServer((req,res) => {\n    var post = '';      //用于暂存请求体的内容\n    req.on('data',(chunk) => {\n        //通过req的data事件监听函数，每当接受到请求体的数据，就累加到变量中\n        post += chunk;\n    })\n    req.on('end',() => {\n        //在end事件触发后，通过querystring.parse将post解析为真正的POST请求格式，然后向客户端返回。\n        post = querystring.parse(post);\n        res.end(util.inspect(post));\n    })\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("h2",{attrs:{id:"node-js-全局方法和工具函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-js-全局方法和工具函数"}},[s._v("#")]),s._v(" Node.js 全局方法和工具函数")]),s._v(" "),e("h3",{attrs:{id:"全局对象-global"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局对象-global"}},[s._v("#")]),s._v(" 全局对象 global")]),s._v(" "),e("p",[s._v("JavaScript 中有一个特殊的对象，称为全局对象（Global Object），它及其所有属性都可以在程序的任何地方访问，即全局变量。")]),s._v(" "),e("p",[s._v("在浏览器 JavaScript 中，通常 window 是全局对象， 而 Node.js 中的全局对象是 global，所有全局变量（除了 global 本身以外）都是 global 对象的属性。")]),s._v(" "),e("h5",{attrs:{id:"永远使用声明变量以避免引入全局变量，因为全局变量会污染-命令空间，提高代码的耦合风险。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#永远使用声明变量以避免引入全局变量，因为全局变量会污染-命令空间，提高代码的耦合风险。"}},[s._v("#")]),s._v(" 永远使用声明变量以避免引入全局变量，因为全局变量会污染 命令空间，提高代码的耦合风险。")]),s._v(" "),e("h3",{attrs:{id:"filename"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filename"}},[s._v("#")]),s._v(" __filename")]),s._v(" "),e("p",[s._v("__filename 表示当前正在执行的脚本的文件名，它将输出文件所在位置的绝对路径，且和命令行参数所指的文件名不一定相同.如果在模块中，返回的值是模块的路径。")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("console.log(__filename)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"dirname"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dirname"}},[s._v("#")]),s._v(" __dirname")]),s._v(" "),e("p",[s._v("__dirname 表示当前执行脚本所在的目录。")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 输出全局变量 __dirname 的值\nconsole.log( __dirname );\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"settimeout-cb-ms"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#settimeout-cb-ms"}},[s._v("#")]),s._v(" setTimeout(cb,ms)")]),s._v(" "),e("p",[s._v("和浏览器中执行的 js 代码的 setTimeout 相同，在指定的毫秒后执行指定函数 cb，setTimeout()只执行一次指定函数。返回一个定时器对象。")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const timer = setTimeout(()=> {\n    console.log('time');\n},2000)\nconsole.log(timer);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h3",{attrs:{id:"cleartimeout"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cleartimeout"}},[s._v("#")]),s._v(" clearTimeout()")]),s._v(" "),e("p",[s._v("clearTimeout(e) 全局函数用于停止一个之前通过 setTimeout 创建的定时器，参数 t 是通过 setTimeoit 函数创建的定时器对象。")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const timer = setTimeout(()=> {\n    console.log('timer');\n},2000)\nclearTimeout(timer);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h3",{attrs:{id:"setinterval-cb-ms"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setinterval-cb-ms"}},[s._v("#")]),s._v(" setInterval(cb,ms)")]),s._v(" "),e("p",[s._v("setInterval(cb,ms)全局函数在指定的毫秒数后执行指定函数(cb),返回一个定时器对象，可以使用 clearInterval 函数清楚定时器，setInterval 方法会不停的调用函数，直到 clearInterval 被调用或窗口被关闭。")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("setInterval(()=>{\n    console.log('hello');\n},1000);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h3",{attrs:{id:"console-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#console-方法"}},[s._v("#")]),s._v(" console 方法")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://wendaoshuai66.github.io/study/note/images/console.png",alt:"console方法"}})]),s._v(" "),e("h3",{attrs:{id:"process"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process"}},[s._v("#")]),s._v(" process")]),s._v(" "),e("p",[s._v("process 是一个全局变量，即 global 对象的属性。")]),s._v(" "),e("p",[s._v("它用于描述当前 Node.js 进程状态的对象，提供了一个与操作系统的简单接口。通常在你写本地命令行程序的时候，少不了要 和它打交道。")]),s._v(" "),e("h3",{attrs:{id:"常用工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用工具"}},[s._v("#")]),s._v(" 常用工具")]),s._v(" "),e("p",[s._v("util 是一个 Nodejs 核心模块，提供常用函数的集合，用于弥补核心 JavaScript 的功能，过于精简的不足。")]),s._v(" "),e("h4",{attrs:{id:"引入-util"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#引入-util"}},[s._v("#")]),s._v(" 引入 util")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const util = require('util');\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h4",{attrs:{id:"util-inherits"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#util-inherits"}},[s._v("#")]),s._v(" util.inherits")]),s._v(" "),e("p",[s._v("util.inherits(constructor,superContructor)是一个实现对象间原型继承的函数。")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("function Car(){\n    this.name = 'wang';\n}\nfunction Curze(){\n    this.type = 'curze';\n}\nutil.inherits(Curze,Car);\nconst curze = new Curze();\nconsole.log(curze.__proto__.__proto__);     //Car\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h4",{attrs:{id:"util-inspect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#util-inspect"}},[s._v("#")]),s._v(" util.inspect")]),s._v(" "),e("p",[s._v("util.inspect(object,[showHidden],[depth],[colors])是一个将任意对象转化程字符串的方法，通常用于调试和错误输出。它至少接收一个参数 object，即要转换的对象。")]),s._v(" "),e("p",[s._v("showHidden 是一个可选参数，如果值为 true，将会输出更多的隐藏信息。")]),s._v(" "),e("p",[s._v("depth 表示最大递归层数，如果对象很复杂，你可以指定层数以控制输出信息的多少。如果不指定 depth，   默认会递归两层，指定为 null 表示不限递归赠书完整遍历对象。")]),s._v(" "),e("p",[s._v("如果 color 值为 true，输出格式将会一 ANSI 颜色编码，通常用于在终端显示更漂亮的效果。")]),s._v(" "),e("h5",{attrs:{id:"特别要指出的是，util-inspect-并不会简单的直接把对象转换为字符串，即使对象定义了-tostring-方法也不会调用。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#特别要指出的是，util-inspect-并不会简单的直接把对象转换为字符串，即使对象定义了-tostring-方法也不会调用。"}},[s._v("#")]),s._v(" 特别要指出的是，util.inspect 并不会简单的直接把对象转换为字符串，即使对象定义了 toString 方法也不会调用。")]),s._v(" "),e("h4",{attrs:{id:"util-isarray-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#util-isarray-object"}},[s._v("#")]),s._v(" util.isArray(object)")]),s._v(" "),e("p",[s._v("如果给定的参数 object 是一个数组返回 true，否则返回 false")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("console.log(util.isArray([]));      //true\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h4",{attrs:{id:"util-isregexp-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#util-isregexp-object"}},[s._v("#")]),s._v(" util.isRegExp(object)")]),s._v(" "),e("p",[s._v("如果给定的参数 object 是一个正则表达式返回 true，否则返回 false")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("console.log(util.isRegExp(/[]/g));  //true\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h4",{attrs:{id:"util-isdate-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#util-isdate-object"}},[s._v("#")]),s._v(" util.isDate(object)")]),s._v(" "),e("p",[s._v("如果给定的参数 object 是一个日期返回 true，否则返回 false")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("console.log(util.isDate(new Date()));   //true\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h4",{attrs:{id:"util-iserror-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#util-iserror-object"}},[s._v("#")]),s._v(" util.isError(object)")]),s._v(" "),e("p",[s._v("如果给定的参数 object 是一个错误对象返回 true，否则返回 false")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("console.log(util.isError(new Error()));\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h4",{attrs:{id:"一个更强大的功能库–underscore-js"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一个更强大的功能库–underscore-js"}},[s._v("#")]),s._v(" 一个更强大的功能库–underscore.js")]),s._v(" "),e("h2",{attrs:{id:"node-js-文件系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-js-文件系统"}},[s._v("#")]),s._v(" Node.js 文件系统")]),s._v(" "),e("h3",{attrs:{id:"文件模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件模块"}},[s._v("#")]),s._v(" 文件模块")]),s._v(" "),e("p",[s._v("引入文件模块")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const fs = require(‘fs’);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"异步与同步文件操作的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#异步与同步文件操作的区别"}},[s._v("#")]),s._v(" 异步与同步文件操作的区别")]),s._v(" "),e("p",[s._v("异步方法性能更高、速度更快、而且没有阻塞")]),s._v(" "),e("h3",{attrs:{id:"打开文件–异步"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#打开文件–异步"}},[s._v("#")]),s._v(" 打开文件–异步")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("fs.open(path,flags,mode,callback);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("1.path：文件的路径")]),s._v(" "),e("p",[s._v("2.flags：文件打开的行为。")]),s._v(" "),e("p",[s._v("3.model：设置文件模式(权限),文件创建默认权限为 0666(可读可写);")]),s._v(" "),e("p",[s._v("r：以读取模式打开文件。如果文件不存在抛出异常")]),s._v(" "),e("p",[s._v("r+：以读写模式打开文件，如果文件不存在抛出异常")]),s._v(" "),e("p",[s._v("rs：以同步的方式读取文件")]),s._v(" "),e("p",[s._v("rs+：以同步的方式读取和写入文件")]),s._v(" "),e("p",[s._v("w：以写入模式打开文件，如果文件不存在则创建")]),s._v(" "),e("p",[s._v("wx：类似于 w，但是如果文件路径存在，则文件写入失败")]),s._v(" "),e("p",[s._v("w+：以读写模式打开文件，如果文件不存在则创建")]),s._v(" "),e("p",[s._v("wx+：类似 w+，但是如果文件路径存在，则文件读写失败")]),s._v(" "),e("p",[s._v("a：以追加模式打开文件，如果文件不存在则创建")]),s._v(" "),e("p",[s._v("ax：类似于 a，但是如果文件路径存在，则文件追加失败")]),s._v(" "),e("p",[s._v("a+：以读取追加模式打开文件，如果文件不存在则创建")]),s._v(" "),e("p",[s._v("ax+：类似 a+，但是如果文件路径存在，则文件读取追加失败")]),s._v(" "),e("p",[s._v("4.callback：回调函数，带有两个参数：callback(err,fd)")]),s._v(" "),e("p",[s._v("err 是错误对象")]),s._v(" "),e("p",[s._v("fd：表示所打开的文件有多少行")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("fs.open('test.js','r+',(err,fd) => {\n    if(err){\n        return console.log(err);\n    }\n    console.log(fd);\n});\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h3",{attrs:{id:"获取文件信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取文件信息"}},[s._v("#")]),s._v(" 获取文件信息")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("fs.stat(path,callback)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("path：文件路径\ncallback：回调函数，带有两个参数：err，states，states 是 fs.States 对象")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("fs.stat('test.js',(err,stats)=> {\n    if(err){\n        return console.error(err);\n    }\n    console.log(stats);\n})\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("stats 类中的方法")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://wendaoshuai66.github.io/study/note/images/fsstate.png",alt:"stats类中的方法"}})]),s._v(" "),e("h3",{attrs:{id:"写入文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#写入文件"}},[s._v("#")]),s._v(" 写入文件")]),s._v(" "),e("h4",{attrs:{id:"同步写入文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#同步写入文件"}},[s._v("#")]),s._v(" 同步写入文件")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("fs.writeFileSync('test1.js','fdsafdaf');\nconsole.log('写入成功');\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h4",{attrs:{id:"异步写入文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#异步写入文件"}},[s._v("#")]),s._v(" 异步写入文件")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("fs.writeFile(file,data,{options},callback)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("writeFile 直接打开文件默认是 w 模式，所以如果文件存在，该方法写入的内容会覆盖旧的文件内容")]),s._v(" "),e("p",[s._v("file：文件名或文件描述符")]),s._v(" "),e("p",[s._v("data：要写入文件的数据，可能是 String(字符串)或 Buffer(缓冲)对象;")]),s._v(" "),e("p",[s._v("options：该参数是一个对象，包含{encoding、mode、flag}。默认编码 utf8，模式为 0666，flag 为‘w’")]),s._v(" "),e("p",[s._v("callback：回调函数，回调函数只包含出错信息参数(err),在写入失败时返回。")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("console.log('准备写入文件!');\nfs.writeFile('test1.js','写入成功!!!!!',(err)=> {\n    if(err){\n        return console.error(err);\n    }\n    console.log('数据写入成功!');\n    console.log('-------我是分割线--------');\n    console.log('读取写入的数据');\n    fs.readFile('test1.js',(err,data) => {\n        if(err){\n            return console.error(err);\n        }\n        console.log('异步读取文件数据:' + data.toString());\n    })\n})\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("h3",{attrs:{id:"读取文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#读取文件"}},[s._v("#")]),s._v(" 读取文件")]),s._v(" "),e("h4",{attrs:{id:"同步读取文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#同步读取文件"}},[s._v("#")]),s._v(" 同步读取文件")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const data = fs.readFileSync('test1.js');\nconsole.log(data.toString());\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h4",{attrs:{id:"异步读取文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#异步读取文件"}},[s._v("#")]),s._v(" 异步读取文件")]),s._v(" "),e("p",[s._v("使用 fs.readFile(path,{options},callback)")]),s._v(" "),e("p",[s._v("path:读取文件的路径")]),s._v(" "),e("p",[s._v("options:{encoding,flag},encoding:null,flag:r")]),s._v(" "),e("p",[s._v("callback:err,data;第一个参数是 err,第二个参数是读取出的信息。")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("\nfs.readFile('test1.js',{encoding:'utf8'},(err,data) => {\n    if(err){\n        return console.error(err);\n    }\n    console.log(data);\n})\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[s._v("使用 fs.read(fd,buffer,offset,length,position,callback);")]),s._v(" "),e("p",[s._v("fd：通过 fs.open()方法返回的文件描述符")]),s._v(" "),e("p",[s._v("buffer：数据写入的缓冲区")]),s._v(" "),e("p",[s._v("offset：缓冲区写入的写入偏移量")]),s._v(" "),e("p",[s._v("length：要从文件中读取的字节数")]),s._v(" "),e("p",[s._v("position：文件读取的起始位置，如果 position 的值为 null，则会从当前文件指针的位置读取")]),s._v(" "),e("p",[s._v("callback：回调函数，有三个参数 err、byteRead、buffer。err 为错误信息，byteRead 表示读取的字节数，buffer 为缓冲区对象")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("var buffer = new Buffer.alloc(1024);\nfs.open('test1.js','r+',(err,fd) => {\n    if(err){\n        return console.error(err);\n    }\n    console.log('打开文件成功！');\n    console.log('准备打开文件！');\n    fs.read(fd,buffer,'0',buffer.length,0,(err,byteRead,buffer) => {\n        if(err){\n            return console.error(err);\n        }\n        console.log(byteRead + '字符被读取');\n        console.log(buffer.toString());\n    })\n})\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("h3",{attrs:{id:"关闭文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关闭文件"}},[s._v("#")]),s._v(" 关闭文件")]),s._v(" "),e("p",[s._v("fs.close(fd,callback) 异步关闭文件")]),s._v(" "),e("p",[s._v("fd：通过 fs.open()方法返回的文件描述符")]),s._v(" "),e("p",[s._v("callback：回调函数")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("fs.open('test1.js','r+',(err,fd) => {\n    if(err){\n        return console.error(err);\n    }\n    console.log('文件打开成功！');\n    fs.close(fd,()=>{\n        console.log('文件关闭成功！');\n    })\n}) \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[s._v("fs.closeSync(fd) 同步关闭文件")]),s._v(" "),e("p",[s._v("fd：通过 fs.open()方法返回的文件描述符")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("fs.open('test1.js','r+' ,(err,fd) => {\n    if(err){\n        return console.error(err);\n    }\n    console.log('文件打开成功！');\n    fs.closeSync(fd);\n    console.log('文件关闭成功！');\n})\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h3",{attrs:{id:"截取文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#截取文件"}},[s._v("#")]),s._v(" 截取文件")]),s._v(" "),e("p",[s._v("fs.ftruncate(fd,len,callback) 异步截取")]),s._v(" "),e("p",[s._v("fd：通过 fs.open()方法返回的文件描述符")]),s._v(" "),e("p",[s._v("len：文件内容截取的长度")]),s._v(" "),e("p",[s._v("callback：回调函数")]),s._v(" "),e("div",{staticClass:"language-plain line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("fs.open('test1.js','r+',(err,fd) => {\n    if(err){\n        return console.error(err);\n    }\n    console.log('打开文件成功！');\n    console.log('开始截取文件');\n    fs.ftruncate(fd,10,() => {\n        console.log('截取文件成功！');\n        fs.close(fd,() =>{\n            console.log('文件关闭成功！');\n        })\n    });\n})\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("h3",{attrs:{id:"删除文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除文件"}},[s._v("#")]),s._v(" 删除文件")]),s._v(" "),e("p",[s._v("fs.unlink(path,callback);")]),s._v(" "),e("h3",{attrs:{id:"创建目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建目录"}},[s._v("#")]),s._v(" 创建目录")]),s._v(" "),e("p",[s._v("fs.mkdir(path,[options],callback)")]),s._v(" "),e("h3",{attrs:{id:"读取目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#读取目录"}},[s._v("#")]),s._v(" 读取目录")]),s._v(" "),e("p",[s._v("fs.readdir(path,callback)")]),s._v(" "),e("h3",{attrs:{id:"删除目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除目录"}},[s._v("#")]),s._v(" 删除目录")]),s._v(" "),e("p",[s._v("fs.rmdir(path,callback)")])])}),[],!1,null,null,null);a.default=n.exports}}]);